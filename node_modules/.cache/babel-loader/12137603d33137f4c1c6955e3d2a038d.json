{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst abstractmessage_1 = require(\"./abstractmessage\");\n\nclass TelemetryEvent {\n  constructor(start, // relative to event send time\n  end, // relative to event send time\n  title, details, id, // optional, default will be random assigned by backend\n  type) {\n    this.start = start;\n    this.end = end;\n    this.title = title;\n    this.details = details;\n    this.id = id;\n    this.type = type;\n  } // optional, default will be \"SDK\" assigned by backend\n\n\n}\n\nexports.TelemetryEvent = TelemetryEvent;\n\nclass Telemetry extends abstractmessage_1.AbstractMessage {\n  constructor(events) {\n    super();\n    this.method = 'telemetry.v1';\n    this.events = events;\n  }\n\n}\n\nexports.Telemetry = Telemetry;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/node_modules/twilsock/lib/protocol/messages/telemetry.js"],"names":["Object","defineProperty","exports","value","abstractmessage_1","require","TelemetryEvent","constructor","start","end","title","details","id","type","Telemetry","AbstractMessage","events","method"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,mBAAD,CAAjC;;AACA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnBC,EAAAA,GADW,EACN;AACLC,EAAAA,KAFW,EAEJC,OAFI,EAEKC,EAFL,EAES;AACpBC,EAAAA,IAHW,EAGL;AACF,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH,GAXgB,CAWf;;;AAXe;;AAarBX,OAAO,CAACI,cAAR,GAAyBA,cAAzB;;AACA,MAAMQ,SAAN,SAAwBV,iBAAiB,CAACW,eAA1C,CAA0D;AACtDR,EAAAA,WAAW,CAACS,MAAD,EAAS;AAChB;AACA,SAAKC,MAAL,GAAc,cAAd;AACA,SAAKD,MAAL,GAAcA,MAAd;AACH;;AALqD;;AAO1Dd,OAAO,CAACY,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst abstractmessage_1 = require(\"./abstractmessage\");\r\nclass TelemetryEvent {\r\n    constructor(start, // relative to event send time\r\n    end, // relative to event send time\r\n    title, details, id, // optional, default will be random assigned by backend\r\n    type) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.title = title;\r\n        this.details = details;\r\n        this.id = id;\r\n        this.type = type;\r\n    } // optional, default will be \"SDK\" assigned by backend\r\n}\r\nexports.TelemetryEvent = TelemetryEvent;\r\nclass Telemetry extends abstractmessage_1.AbstractMessage {\r\n    constructor(events) {\r\n        super();\r\n        this.method = 'telemetry.v1';\r\n        this.events = events;\r\n    }\r\n}\r\nexports.Telemetry = Telemetry;\r\n"]},"metadata":{},"sourceType":"script"}