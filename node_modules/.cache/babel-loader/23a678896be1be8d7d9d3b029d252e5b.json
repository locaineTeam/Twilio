{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ARSW III\\\\Twilio\\\\src\\\\Room.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport ChatApp from './ChatApp';\nimport Participant from './Participant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remoteParticipants: Array.from(this.props.room.participants.values())\n    };\n    this.leaveRoom = this.leaveRoom.bind(this);\n  }\n\n  componentDidMount() {\n    // Add event listeners for future remote participants coming or going\n    this.props.room.on('participantConnected', participant => this.addParticipant(participant));\n    this.props.room.on('participantDisconnected', participant => this.removeParticipant(participant));\n    window.addEventListener(\"beforeunload\", this.leaveRoom);\n  }\n\n  componentWillUnmount() {\n    this.leaveRoom();\n  }\n\n  addParticipant(participant) {\n    console.log(`${participant.identity} has joined the room.`);\n    this.setState({\n      remoteParticipants: [...this.state.remoteParticipants, participant]\n    });\n  }\n\n  removeParticipant(participant) {\n    console.log(`${participant.identity} has left the room`);\n    this.setState({\n      remoteParticipants: this.state.remoteParticipants.filter(p => p.identity !== participant.identity)\n    });\n  }\n\n  leaveRoom() {\n    this.props.room.disconnect();\n    this.props.returnToLobby();\n  }\n\n  render() {\n    let chat;\n    chat = /*#__PURE__*/_jsxDEV(ChatApp, {\n      username: \"SIMON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participants\",\n        children: [/*#__PURE__*/_jsxDEV(Participant, {\n          localParticipant: \"true\",\n          participant: this.props.room.localParticipant\n        }, this.props.room.localParticipant.identity, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), this.state.remoteParticipants.map(participant => /*#__PURE__*/_jsxDEV(Participant, {\n          participant: participant\n        }, participant.identity, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          className: \"row mt-3\",\n          children: chat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"leaveRoom\",\n        onClick: this.leaveRoom,\n        children: \"Leave Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/src/Room.js"],"names":["React","Component","ChatApp","Participant","Room","constructor","props","state","remoteParticipants","Array","from","room","participants","values","leaveRoom","bind","componentDidMount","on","participant","addParticipant","removeParticipant","window","addEventListener","componentWillUnmount","console","log","identity","setState","filter","p","disconnect","returnToLobby","render","chat","localParticipant","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.scss';\r\nimport ChatApp from './ChatApp';\r\nimport Participant from './Participant';\r\n\r\nclass Room extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            remoteParticipants: Array.from(this.props.room.participants.values())\r\n        }\r\n\r\n        this.leaveRoom = this.leaveRoom.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Add event listeners for future remote participants coming or going\r\n        this.props.room.on('participantConnected', participant => this.addParticipant(participant));\r\n        this.props.room.on('participantDisconnected', participant => this.removeParticipant(participant));\r\n\r\n        window.addEventListener(\"beforeunload\", this.leaveRoom);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.leaveRoom();\r\n    }\r\n\r\n    addParticipant(participant) {\r\n        console.log(`${participant.identity} has joined the room.`);\r\n\r\n        this.setState({\r\n            remoteParticipants: [...this.state.remoteParticipants, participant]\r\n        });\r\n    }\r\n\r\n    removeParticipant(participant) {\r\n        console.log(`${participant.identity} has left the room`);\r\n\r\n        this.setState({\r\n            remoteParticipants: this.state.remoteParticipants.filter(p => p.identity !== participant.identity)\r\n        });\r\n    }\r\n\r\n    leaveRoom() {\r\n        this.props.room.disconnect();\r\n        this.props.returnToLobby();\r\n    }\r\n\r\n    render() {\r\n        let chat;\r\n        chat= <ChatApp username={\"SIMON\"} />;\r\n        \r\n        return (\r\n            <div className=\"room\">\r\n                <div className = \"participants\">\r\n                    <Participant key={this.props.room.localParticipant.identity} localParticipant=\"true\" participant={this.props.room.localParticipant}/>\r\n                    {\r\n                        this.state.remoteParticipants.map(participant =>\r\n                            <Participant key={participant.identity} participant={participant}/>\r\n                        )\r\n                    }\r\n                    <div class=\"container\" className=\"row mt-3\">{chat}</div>\r\n                </div>\r\n                <button id=\"leaveRoom\" onClick={this.leaveRoom}>Leave Room</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r"]},"metadata":{},"sourceType":"module"}