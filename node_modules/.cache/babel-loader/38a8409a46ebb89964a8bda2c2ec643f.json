{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EventEmitter = require('./eventemitter');\n\nvar RemoteAudioTrack = require('./media/track/remoteaudiotrack');\n\nvar RemoteAudioTrackPublication = require('./media/track/remoteaudiotrackpublication');\n\nvar RemoteDataTrack = require('./media/track/remotedatatrack');\n\nvar RemoteDataTrackPublication = require('./media/track/remotedatatrackpublication');\n\nvar RemoteVideoTrack = require('./media/track/remotevideotrack');\n\nvar RemoteVideoTrackPublication = require('./media/track/remotevideotrackpublication');\n\nvar util = require('./util');\n\nvar nInstances = 0;\n/**\r\n * {@link NetworkQualityLevel} is a value from 0â€“5, inclusive, representing the\r\n * quality of a network connection.\r\n * @typedef {number} NetworkQualityLevel\r\n */\n\n/**\r\n * @extends EventEmitter\r\n * @property {Map<Track.SID, AudioTrackPublication>} audioTracks -\r\n *    The {@link Participant}'s {@link AudioTrackPublication}s\r\n * @property {Map<Track.SID, DataTrackPublication>} dataTracks -\r\n *    The {@link Participant}'s {@link DataTrackPublication}s.\r\n * @property {Participant.Identity} identity - The identity of the {@link Participant}\r\n * @property {?NetworkQualityLevel} networkQualityLevel - The\r\n *    {@link Participant}'s current {@link NetworkQualityLevel}, if any\r\n * @property {?NetworkQualityStats} networkQualityStats - The\r\n *    {@link Participant}'s current {@link NetworkQualityStats}, if any\r\n * @property {Participant.SID} sid - The {@link Participant}'s SID\r\n * @property {string} state - \"connected\", \"disconnected\" or \"reconnecting\"\r\n * @property {Map<Track.SID, TrackPublication>} tracks -\r\n *    The {@link Participant}'s {@link TrackPublication}s\r\n * @property {Map<Track.SID, VideoTrackPublication>} videoTracks -\r\n *    The {@link Participant}'s {@link VideoTrackPublication}s\r\n * @emits Participant#disconnected\r\n * @emits Participant#networkQualityLevelChanged\r\n * @emits Participant#reconnected\r\n * @emits Participant#reconnecting\r\n * @emits Participant#trackDimensionsChanged\r\n * @emits Participant#trackStarted\r\n */\n\nvar Participant = function (_EventEmitter) {\n  _inherits(Participant, _EventEmitter);\n  /**\r\n   * Construct a {@link Participant}.\r\n   * @param {ParticipantSignaling} signaling\r\n   * @param {object} [options]\r\n   */\n\n\n  function Participant(signaling, options) {\n    _classCallCheck(this, Participant);\n\n    var _this = _possibleConstructorReturn(this, (Participant.__proto__ || Object.getPrototypeOf(Participant)).call(this));\n\n    options = Object.assign({\n      RemoteAudioTrack: RemoteAudioTrack,\n      RemoteAudioTrackPublication: RemoteAudioTrackPublication,\n      RemoteDataTrack: RemoteDataTrack,\n      RemoteDataTrackPublication: RemoteDataTrackPublication,\n      RemoteVideoTrack: RemoteVideoTrack,\n      RemoteVideoTrackPublication: RemoteVideoTrackPublication,\n      tracks: []\n    }, options);\n    var indexed = indexTracksById(options.tracks);\n    var log = options.log.createLog('default', _this);\n    var audioTracks = new Map(indexed.audioTracks);\n    var dataTracks = new Map(indexed.dataTracks);\n    var tracks = new Map(indexed.tracks);\n    var videoTracks = new Map(indexed.videoTracks);\n    Object.defineProperties(_this, {\n      _RemoteAudioTrack: {\n        value: options.RemoteAudioTrack\n      },\n      _RemoteAudioTrackPublication: {\n        value: options.RemoteAudioTrackPublication\n      },\n      _RemoteDataTrack: {\n        value: options.RemoteDataTrack\n      },\n      _RemoteDataTrackPublication: {\n        value: options.RemoteDataTrackPublication\n      },\n      _RemoteVideoTrack: {\n        value: options.RemoteVideoTrack\n      },\n      _RemoteVideoTrackPublication: {\n        value: options.RemoteVideoTrackPublication\n      },\n      _audioTracks: {\n        value: audioTracks\n      },\n      _dataTracks: {\n        value: dataTracks\n      },\n      _instanceId: {\n        value: ++nInstances\n      },\n      _log: {\n        value: log\n      },\n      _signaling: {\n        value: signaling\n      },\n      _tracks: {\n        value: tracks\n      },\n      _trackEventReemitters: {\n        value: new Map()\n      },\n      _trackPublicationEventReemitters: {\n        value: new Map()\n      },\n      _trackSignalingUpdatedEventCallbacks: {\n        value: new Map()\n      },\n      _videoTracks: {\n        value: videoTracks\n      },\n      audioTracks: {\n        enumerable: true,\n        value: new Map()\n      },\n      dataTracks: {\n        enumerable: true,\n        value: new Map()\n      },\n      identity: {\n        enumerable: true,\n        get: function get() {\n          return signaling.identity;\n        }\n      },\n      networkQualityLevel: {\n        enumerable: true,\n        get: function get() {\n          return signaling.networkQualityLevel;\n        }\n      },\n      networkQualityStats: {\n        enumerable: true,\n        get: function get() {\n          return signaling.networkQualityStats;\n        }\n      },\n      sid: {\n        enumerable: true,\n        get: function get() {\n          return signaling.sid;\n        }\n      },\n      state: {\n        enumerable: true,\n        get: function get() {\n          return signaling.state;\n        }\n      },\n      tracks: {\n        enumerable: true,\n        value: new Map()\n      },\n      videoTracks: {\n        enumerable: true,\n        value: new Map()\n      }\n    });\n\n    _this._tracks.forEach(reemitTrackEvents.bind(null, _this));\n\n    signaling.on('networkQualityLevelChanged', function () {\n      return _this.emit('networkQualityLevelChanged', _this.networkQualityLevel, _this.networkQualityStats && (_this.networkQualityStats.audio || _this.networkQualityStats.video) ? _this.networkQualityStats : null);\n    });\n    reemitSignalingStateChangedEvents(_this, signaling);\n    log.info('Created a new Participant' + (_this.identity ? ': ' + _this.identity : ''));\n    return _this;\n  }\n  /**\r\n   * Get the {@link RemoteTrack} events to re-emit.\r\n   * @private\r\n   * @returns {Array<Array<string>>} events\r\n   */\n\n\n  _createClass(Participant, [{\n    key: '_getTrackEvents',\n    value: function _getTrackEvents() {\n      return [['dimensionsChanged', 'trackDimensionsChanged'], ['message', 'trackMessage'], ['started', 'trackStarted']];\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: '_getTrackPublicationEvents',\n    value: function _getTrackPublicationEvents() {\n      return [];\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '[Participant #' + this._instanceId + ': ' + this.sid + ']';\n    }\n    /**\r\n     * @private\r\n     * @param {RemoteTrack} track\r\n     * @param {Track.ID} id\r\n     * @returns {?RemoteTrack}\r\n     */\n\n  }, {\n    key: '_addTrack',\n    value: function _addTrack(track, id) {\n      var log = this._log;\n\n      if (this._tracks.has(id)) {\n        return null;\n      }\n\n      this._tracks.set(id, track);\n\n      var tracksByKind = {\n        audio: this._audioTracks,\n        video: this._videoTracks,\n        data: this._dataTracks\n      }[track.kind];\n      tracksByKind.set(id, track);\n      reemitTrackEvents(this, track, id);\n      log.info('Added a new ' + util.trackClass(track) + ':', id);\n      log.debug(util.trackClass(track) + ':', track);\n      return track;\n    }\n    /**\r\n     * @private\r\n     * @param {RemoteTrackPublication} publication\r\n     * @returns {?RemoteTrackPublication}\r\n     */\n\n  }, {\n    key: '_addTrackPublication',\n    value: function _addTrackPublication(publication) {\n      var log = this._log;\n\n      if (this.tracks.has(publication.trackSid)) {\n        return null;\n      }\n\n      this.tracks.set(publication.trackSid, publication);\n      var trackPublicationsByKind = {\n        audio: this.audioTracks,\n        data: this.dataTracks,\n        video: this.videoTracks\n      }[publication.kind];\n      trackPublicationsByKind.set(publication.trackSid, publication);\n      reemitTrackPublicationEvents(this, publication);\n      log.info('Added a new ' + util.trackPublicationClass(publication) + ':', publication.trackSid);\n      log.debug(util.trackPublicationClass(publication) + ':', publication);\n      return publication;\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: '_handleTrackSignalingEvents',\n    value: function _handleTrackSignalingEvents() {\n      var log = this._log;\n      var self = this;\n\n      if (this.state === 'disconnected') {\n        return;\n      }\n\n      var RemoteAudioTrack = this._RemoteAudioTrack;\n      var RemoteAudioTrackPublication = this._RemoteAudioTrackPublication;\n      var RemoteVideoTrack = this._RemoteVideoTrack;\n      var RemoteVideoTrackPublication = this._RemoteVideoTrackPublication;\n      var RemoteDataTrack = this._RemoteDataTrack;\n      var RemoteDataTrackPublication = this._RemoteDataTrackPublication;\n      var participantSignaling = this._signaling;\n\n      function trackSignalingAdded(signaling) {\n        var RemoteTrackPublication = {\n          audio: RemoteAudioTrackPublication,\n          data: RemoteDataTrackPublication,\n          video: RemoteVideoTrackPublication\n        }[signaling.kind];\n        var publication = new RemoteTrackPublication(signaling, {\n          log: log\n        });\n\n        self._addTrackPublication(publication);\n\n        var isSubscribed = signaling.isSubscribed;\n\n        if (isSubscribed) {\n          trackSignalingSubscribed(signaling);\n        }\n\n        self._trackSignalingUpdatedEventCallbacks.set(signaling.sid, function () {\n          if (isSubscribed !== signaling.isSubscribed) {\n            isSubscribed = signaling.isSubscribed;\n\n            if (isSubscribed) {\n              trackSignalingSubscribed(signaling);\n              return;\n            }\n\n            trackSignalingUnsubscribed(signaling);\n          }\n        });\n\n        signaling.on('updated', self._trackSignalingUpdatedEventCallbacks.get(signaling.sid));\n      }\n\n      function trackSignalingRemoved(signaling) {\n        if (signaling.isSubscribed) {\n          signaling.setTrackTransceiver(null);\n        }\n\n        var updated = self._trackSignalingUpdatedEventCallbacks.get(signaling.sid);\n\n        if (updated) {\n          signaling.removeListener('updated', updated);\n\n          self._trackSignalingUpdatedEventCallbacks.delete(signaling.sid);\n        }\n\n        var publication = self.tracks.get(signaling.sid);\n\n        if (publication) {\n          self._removeTrackPublication(publication);\n        }\n      }\n\n      function trackSignalingSubscribed(signaling) {\n        var isEnabled = signaling.isEnabled,\n            name = signaling.name,\n            kind = signaling.kind,\n            sid = signaling.sid,\n            trackTransceiver = signaling.trackTransceiver,\n            isSwitchedOff = signaling.isSwitchedOff;\n        var RemoteTrack = {\n          audio: RemoteAudioTrack,\n          video: RemoteVideoTrack,\n          data: RemoteDataTrack\n        }[kind];\n        var publication = self.tracks.get(sid); // NOTE(mroberts): It should never be the case that the TrackSignaling and\n        // MediaStreamTrack or DataTrackReceiver kinds disagree; however, just in\n        // case, we handle it here.\n\n        if (!RemoteTrack || kind !== trackTransceiver.kind) {\n          return;\n        }\n\n        var options = {\n          log: log,\n          name: name\n        };\n\n        var setPriority = function setPriority(newPriority) {\n          return participantSignaling.updateSubscriberTrackPriority(sid, newPriority);\n        };\n\n        var track = kind === 'data' ? new RemoteTrack(sid, trackTransceiver, options) : new RemoteTrack(sid, trackTransceiver, isEnabled, isSwitchedOff, setPriority, options);\n\n        self._addTrack(track, publication, trackTransceiver.id);\n      }\n\n      function trackSignalingUnsubscribed(signaling) {\n        var _Array$from$find = Array.from(self._tracks.entries()).find(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              track = _ref2[1];\n\n          return track.sid === signaling.sid;\n        }),\n            _Array$from$find2 = _slicedToArray(_Array$from$find, 2),\n            id = _Array$from$find2[0],\n            track = _Array$from$find2[1];\n\n        var publication = self.tracks.get(signaling.sid);\n\n        if (track) {\n          self._removeTrack(track, publication, id);\n        }\n      }\n\n      participantSignaling.on('trackAdded', trackSignalingAdded);\n      participantSignaling.on('trackRemoved', trackSignalingRemoved);\n      participantSignaling.tracks.forEach(trackSignalingAdded);\n      participantSignaling.on('stateChanged', function stateChanged(state) {\n        if (state === 'disconnected') {\n          log.debug('Removing event listeners');\n          participantSignaling.removeListener('stateChanged', stateChanged);\n          participantSignaling.removeListener('trackAdded', trackSignalingAdded);\n          participantSignaling.removeListener('trackRemoved', trackSignalingRemoved);\n        } else if (state === 'connected') {\n          // NOTE(mmalavalli): Any transition to \"connected\" here is a result of\n          // successful signaling reconnection, and not a first-time establishment\n          // of the signaling connection.\n          log.info('reconnected'); // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\n          // Do not signal  public events synchronously with lock held.\n\n          setTimeout(function () {\n            return self.emit('reconnected');\n          }, 0);\n        }\n      });\n    }\n    /**\r\n     * @private\r\n     * @param {RemoteTrack} track\r\n     * @param {Track.ID} id\r\n     * @returns {?RemoteTrack}\r\n     */\n\n  }, {\n    key: '_removeTrack',\n    value: function _removeTrack(track, id) {\n      if (!this._tracks.has(id)) {\n        return null;\n      }\n\n      this._tracks.delete(id);\n\n      var tracksByKind = {\n        audio: this._audioTracks,\n        video: this._videoTracks,\n        data: this._dataTracks\n      }[track.kind];\n      tracksByKind.delete(id);\n      var reemitters = this._trackEventReemitters.get(id) || new Map();\n      reemitters.forEach(function (reemitter, event) {\n        track.removeListener(event, reemitter);\n      });\n      var log = this._log;\n      log.info('Removed a ' + util.trackClass(track) + ':', id);\n      log.debug(util.trackClass(track) + ':', track);\n      return track;\n    }\n    /**\r\n     * @private\r\n     * @param {RemoteTrackPublication} publication\r\n     * @returns {?RemoteTrackPublication}\r\n     */\n\n  }, {\n    key: '_removeTrackPublication',\n    value: function _removeTrackPublication(publication) {\n      publication = this.tracks.get(publication.trackSid);\n\n      if (!publication) {\n        return null;\n      }\n\n      this.tracks.delete(publication.trackSid);\n      var trackPublicationsByKind = {\n        audio: this.audioTracks,\n        data: this.dataTracks,\n        video: this.videoTracks\n      }[publication.kind];\n      trackPublicationsByKind.delete(publication.trackSid);\n      var reemitters = this._trackPublicationEventReemitters.get(publication.trackSid) || new Map();\n      reemitters.forEach(function (reemitter, event) {\n        publication.removeListener(event, reemitter);\n      });\n      var log = this._log;\n      log.info('Removed a ' + util.trackPublicationClass(publication) + ':', publication.trackSid);\n      log.debug(util.trackPublicationClass(publication) + ':', publication);\n      return publication;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return util.valueToJSON(this);\n    }\n  }]);\n\n  return Participant;\n}(EventEmitter);\n/**\r\n * A {@link Participant.SID} is a 34-character string starting with \"PA\"\r\n * that uniquely identifies a {@link Participant}.\r\n * @type string\r\n * @typedef Participant.SID\r\n */\n\n/**\r\n * A {@link Participant.Identity} is a string that identifies a\r\n * {@link Participant}. You can think of it like a name.\r\n * @typedef {string} Participant.Identity\r\n */\n\n/**\r\n * The {@link Participant} has disconnected.\r\n * @param {Participant} participant - The {@link Participant} that disconnected.\r\n * @event Participant#disconnected\r\n */\n\n/**\r\n * The {@link Participant}'s {@link NetworkQualityLevel} changed.\r\n * @param {NetworkQualityLevel} networkQualityLevel - The new\r\n *   {@link NetworkQualityLevel}\r\n * @param {?NetworkQualityStats} networkQualityStats - The {@link NetworkQualityStats}\r\n *   based on which {@link NetworkQualityLevel} is calculated, if any\r\n * @event Participant#networkQualityLevelChanged\r\n */\n\n/**\r\n * The {@link Participant} has reconnected to the {@link Room} after a signaling connection disruption.\r\n * @event Participant#reconnected\r\n */\n\n/**\r\n * The {@link Participant} is reconnecting to the {@link Room} after a signaling connection disruption.\r\n * @event Participant#reconnecting\r\n */\n\n/**\r\n * One of the {@link Participant}'s {@link VideoTrack}'s dimensions changed.\r\n * @param {VideoTrack} track - The {@link VideoTrack} whose dimensions changed\r\n * @event Participant#trackDimensionsChanged\r\n */\n\n/**\r\n * One of the {@link Participant}'s {@link Track}s started.\r\n * @param {Track} track - The {@link Track} that started\r\n * @event Participant#trackStarted\r\n */\n\n/**\r\n * Indexed {@link Track}s by {@link Track.ID}.\r\n * @typedef {object} IndexedTracks\r\n * @property {Array<{0: Track.ID, 1: AudioTrack}>} audioTracks - Indexed\r\n *   {@link AudioTrack}s\r\n * @property {Array<{0: Track.ID, 1: DataTrack}>} dataTracks - Indexed\r\n *   {@link DataTrack}s\r\n * @property {Array<{0: Track.ID, 1: Track}>} tracks - Indexed {@link Track}s\r\n * @property {Array<{0: Track.ID, 1: VideoTrack}>} videoTracks - Indexed\r\n *   {@link VideoTrack}s\r\n * @private\r\n */\n\n/**\r\n * Index tracks by {@link Track.ID}.\r\n * @param {Array<Track>} tracks\r\n * @returns {IndexedTracks}\r\n * @private\r\n */\n\n\nfunction indexTracksById(tracks) {\n  var indexedTracks = tracks.map(function (track) {\n    return [track.id, track];\n  });\n  var indexedAudioTracks = indexedTracks.filter(function (keyValue) {\n    return keyValue[1].kind === 'audio';\n  });\n  var indexedVideoTracks = indexedTracks.filter(function (keyValue) {\n    return keyValue[1].kind === 'video';\n  });\n  var indexedDataTracks = indexedTracks.filter(function (keyValue) {\n    return keyValue[1].kind === 'data';\n  });\n  return {\n    audioTracks: indexedAudioTracks,\n    dataTracks: indexedDataTracks,\n    tracks: indexedTracks,\n    videoTracks: indexedVideoTracks\n  };\n}\n/**\r\n * Re-emit {@link ParticipantSignaling} 'stateChanged' events.\r\n * @param {Participant} participant\r\n * @param {ParticipantSignaling} signaling\r\n * @private\r\n */\n\n\nfunction reemitSignalingStateChangedEvents(participant, signaling) {\n  var log = participant._log;\n\n  if (participant.state === 'disconnected') {\n    return;\n  } // Reemit state transition events from the ParticipantSignaling.\n\n\n  signaling.on('stateChanged', function stateChanged(state) {\n    log.debug('Transitioned to state:', state);\n    participant.emit(state, participant);\n\n    if (state === 'disconnected') {\n      log.debug('Removing Track event reemitters');\n      signaling.removeListener('stateChanged', stateChanged);\n\n      participant._tracks.forEach(function (track) {\n        var reemitters = participant._trackEventReemitters.get(track.id);\n\n        if (track && reemitters) {\n          reemitters.forEach(function (reemitter, event) {\n            track.removeListener(event, reemitter);\n          });\n        }\n      }); // TODO(joma): Removing this introduced unit test failures in the RemoteParticipant.\n      // Investigate further before removing.\n\n\n      signaling.tracks.forEach(function (trackSignaling) {\n        var track = participant._tracks.get(trackSignaling.id);\n\n        var reemitters = participant._trackEventReemitters.get(trackSignaling.id);\n\n        if (track && reemitters) {\n          reemitters.forEach(function (reemitter, event) {\n            track.removeListener(event, reemitter);\n          });\n        }\n      });\n\n      participant._trackEventReemitters.clear();\n\n      participant.tracks.forEach(function (publication) {\n        participant._trackPublicationEventReemitters.get(publication.trackSid).forEach(function (reemitter, event) {\n          publication.removeListener(event, reemitter);\n        });\n      });\n\n      participant._trackPublicationEventReemitters.clear();\n    }\n  });\n}\n/**\r\n * Re-emit {@link Track} events.\r\n * @param {Participant} participant\r\n * @param {Track} track\r\n * @param {Track.ID} id\r\n * @private\r\n */\n\n\nfunction reemitTrackEvents(participant, track, id) {\n  var trackEventReemitters = new Map();\n\n  if (participant.state === 'disconnected') {\n    return;\n  }\n\n  participant._getTrackEvents().forEach(function (eventPair) {\n    var trackEvent = eventPair[0];\n    var participantEvent = eventPair[1];\n    trackEventReemitters.set(trackEvent, function () {\n      var args = [participantEvent].concat([].slice.call(arguments));\n      return participant.emit.apply(participant, _toConsumableArray(args));\n    });\n    track.on(trackEvent, trackEventReemitters.get(trackEvent));\n  });\n\n  participant._trackEventReemitters.set(id, trackEventReemitters);\n}\n/**\r\n * Re-emit {@link TrackPublication} events.\r\n * @private\r\n * @param {Participant} participant\r\n * @param {TrackPublication} publication\r\n */\n\n\nfunction reemitTrackPublicationEvents(participant, publication) {\n  var publicationEventReemitters = new Map();\n\n  if (participant.state === 'disconnected') {\n    return;\n  }\n\n  participant._getTrackPublicationEvents().forEach(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        publicationEvent = _ref4[0],\n        participantEvent = _ref4[1];\n\n    publicationEventReemitters.set(publicationEvent, function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      participant.emit.apply(participant, [participantEvent].concat(args, [publication]));\n    });\n    publication.on(publicationEvent, publicationEventReemitters.get(publicationEvent));\n  });\n\n  participant._trackPublicationEventReemitters.set(publication.trackSid, publicationEventReemitters);\n}\n\nmodule.exports = Participant;","map":{"version":3,"sources":["C:/Users/Usuario/Downloads/Twilio/node_modules/twilio-video/es5/participant.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_toConsumableArray","arr2","from","_classCallCheck","instance","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","EventEmitter","require","RemoteAudioTrack","RemoteAudioTrackPublication","RemoteDataTrack","RemoteDataTrackPublication","RemoteVideoTrack","RemoteVideoTrackPublication","util","nInstances","Participant","_EventEmitter","signaling","options","_this","getPrototypeOf","assign","tracks","indexed","indexTracksById","log","createLog","audioTracks","Map","dataTracks","videoTracks","_RemoteAudioTrack","_RemoteAudioTrackPublication","_RemoteDataTrack","_RemoteDataTrackPublication","_RemoteVideoTrack","_RemoteVideoTrackPublication","_audioTracks","_dataTracks","_instanceId","_log","_signaling","_tracks","_trackEventReemitters","_trackPublicationEventReemitters","_trackSignalingUpdatedEventCallbacks","_videoTracks","identity","get","networkQualityLevel","networkQualityStats","sid","state","forEach","reemitTrackEvents","bind","on","emit","audio","video","reemitSignalingStateChangedEvents","info","_getTrackEvents","_getTrackPublicationEvents","toString","_addTrack","track","id","has","set","tracksByKind","data","kind","trackClass","debug","_addTrackPublication","publication","trackSid","trackPublicationsByKind","reemitTrackPublicationEvents","trackPublicationClass","_handleTrackSignalingEvents","participantSignaling","trackSignalingAdded","RemoteTrackPublication","isSubscribed","trackSignalingSubscribed","trackSignalingUnsubscribed","trackSignalingRemoved","setTrackTransceiver","updated","removeListener","delete","_removeTrackPublication","isEnabled","name","trackTransceiver","isSwitchedOff","RemoteTrack","setPriority","newPriority","updateSubscriberTrackPriority","_Array$from$find","entries","find","_ref","_ref2","_Array$from$find2","_removeTrack","stateChanged","setTimeout","reemitters","reemitter","event","toJSON","valueToJSON","indexedTracks","map","indexedAudioTracks","filter","keyValue","indexedVideoTracks","indexedDataTracks","participant","trackSignaling","clear","trackEventReemitters","eventPair","trackEvent","participantEvent","args","concat","slice","arguments","apply","publicationEventReemitters","_ref3","_ref4","publicationEvent","_len","_key","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar EventEmitter = require('./eventemitter');\r\nvar RemoteAudioTrack = require('./media/track/remoteaudiotrack');\r\nvar RemoteAudioTrackPublication = require('./media/track/remoteaudiotrackpublication');\r\nvar RemoteDataTrack = require('./media/track/remotedatatrack');\r\nvar RemoteDataTrackPublication = require('./media/track/remotedatatrackpublication');\r\nvar RemoteVideoTrack = require('./media/track/remotevideotrack');\r\nvar RemoteVideoTrackPublication = require('./media/track/remotevideotrackpublication');\r\nvar util = require('./util');\r\n\r\nvar nInstances = 0;\r\n\r\n/**\r\n * {@link NetworkQualityLevel} is a value from 0â€“5, inclusive, representing the\r\n * quality of a network connection.\r\n * @typedef {number} NetworkQualityLevel\r\n */\r\n\r\n/**\r\n * @extends EventEmitter\r\n * @property {Map<Track.SID, AudioTrackPublication>} audioTracks -\r\n *    The {@link Participant}'s {@link AudioTrackPublication}s\r\n * @property {Map<Track.SID, DataTrackPublication>} dataTracks -\r\n *    The {@link Participant}'s {@link DataTrackPublication}s.\r\n * @property {Participant.Identity} identity - The identity of the {@link Participant}\r\n * @property {?NetworkQualityLevel} networkQualityLevel - The\r\n *    {@link Participant}'s current {@link NetworkQualityLevel}, if any\r\n * @property {?NetworkQualityStats} networkQualityStats - The\r\n *    {@link Participant}'s current {@link NetworkQualityStats}, if any\r\n * @property {Participant.SID} sid - The {@link Participant}'s SID\r\n * @property {string} state - \"connected\", \"disconnected\" or \"reconnecting\"\r\n * @property {Map<Track.SID, TrackPublication>} tracks -\r\n *    The {@link Participant}'s {@link TrackPublication}s\r\n * @property {Map<Track.SID, VideoTrackPublication>} videoTracks -\r\n *    The {@link Participant}'s {@link VideoTrackPublication}s\r\n * @emits Participant#disconnected\r\n * @emits Participant#networkQualityLevelChanged\r\n * @emits Participant#reconnected\r\n * @emits Participant#reconnecting\r\n * @emits Participant#trackDimensionsChanged\r\n * @emits Participant#trackStarted\r\n */\r\n\r\nvar Participant = function (_EventEmitter) {\r\n  _inherits(Participant, _EventEmitter);\r\n\r\n  /**\r\n   * Construct a {@link Participant}.\r\n   * @param {ParticipantSignaling} signaling\r\n   * @param {object} [options]\r\n   */\r\n  function Participant(signaling, options) {\r\n    _classCallCheck(this, Participant);\r\n\r\n    var _this = _possibleConstructorReturn(this, (Participant.__proto__ || Object.getPrototypeOf(Participant)).call(this));\r\n\r\n    options = Object.assign({\r\n      RemoteAudioTrack: RemoteAudioTrack,\r\n      RemoteAudioTrackPublication: RemoteAudioTrackPublication,\r\n      RemoteDataTrack: RemoteDataTrack,\r\n      RemoteDataTrackPublication: RemoteDataTrackPublication,\r\n      RemoteVideoTrack: RemoteVideoTrack,\r\n      RemoteVideoTrackPublication: RemoteVideoTrackPublication,\r\n      tracks: []\r\n    }, options);\r\n\r\n    var indexed = indexTracksById(options.tracks);\r\n    var log = options.log.createLog('default', _this);\r\n    var audioTracks = new Map(indexed.audioTracks);\r\n    var dataTracks = new Map(indexed.dataTracks);\r\n    var tracks = new Map(indexed.tracks);\r\n    var videoTracks = new Map(indexed.videoTracks);\r\n\r\n    Object.defineProperties(_this, {\r\n      _RemoteAudioTrack: {\r\n        value: options.RemoteAudioTrack\r\n      },\r\n      _RemoteAudioTrackPublication: {\r\n        value: options.RemoteAudioTrackPublication\r\n      },\r\n      _RemoteDataTrack: {\r\n        value: options.RemoteDataTrack\r\n      },\r\n      _RemoteDataTrackPublication: {\r\n        value: options.RemoteDataTrackPublication\r\n      },\r\n      _RemoteVideoTrack: {\r\n        value: options.RemoteVideoTrack\r\n      },\r\n      _RemoteVideoTrackPublication: {\r\n        value: options.RemoteVideoTrackPublication\r\n      },\r\n      _audioTracks: {\r\n        value: audioTracks\r\n      },\r\n      _dataTracks: {\r\n        value: dataTracks\r\n      },\r\n      _instanceId: {\r\n        value: ++nInstances\r\n      },\r\n      _log: {\r\n        value: log\r\n      },\r\n      _signaling: {\r\n        value: signaling\r\n      },\r\n      _tracks: {\r\n        value: tracks\r\n      },\r\n      _trackEventReemitters: {\r\n        value: new Map()\r\n      },\r\n      _trackPublicationEventReemitters: {\r\n        value: new Map()\r\n      },\r\n      _trackSignalingUpdatedEventCallbacks: {\r\n        value: new Map()\r\n      },\r\n      _videoTracks: {\r\n        value: videoTracks\r\n      },\r\n      audioTracks: {\r\n        enumerable: true,\r\n        value: new Map()\r\n      },\r\n      dataTracks: {\r\n        enumerable: true,\r\n        value: new Map()\r\n      },\r\n      identity: {\r\n        enumerable: true,\r\n        get: function get() {\r\n          return signaling.identity;\r\n        }\r\n      },\r\n      networkQualityLevel: {\r\n        enumerable: true,\r\n        get: function get() {\r\n          return signaling.networkQualityLevel;\r\n        }\r\n      },\r\n      networkQualityStats: {\r\n        enumerable: true,\r\n        get: function get() {\r\n          return signaling.networkQualityStats;\r\n        }\r\n      },\r\n      sid: {\r\n        enumerable: true,\r\n        get: function get() {\r\n          return signaling.sid;\r\n        }\r\n      },\r\n      state: {\r\n        enumerable: true,\r\n        get: function get() {\r\n          return signaling.state;\r\n        }\r\n      },\r\n      tracks: {\r\n        enumerable: true,\r\n        value: new Map()\r\n      },\r\n      videoTracks: {\r\n        enumerable: true,\r\n        value: new Map()\r\n      }\r\n    });\r\n\r\n    _this._tracks.forEach(reemitTrackEvents.bind(null, _this));\r\n    signaling.on('networkQualityLevelChanged', function () {\r\n      return _this.emit('networkQualityLevelChanged', _this.networkQualityLevel, _this.networkQualityStats && (_this.networkQualityStats.audio || _this.networkQualityStats.video) ? _this.networkQualityStats : null);\r\n    });\r\n    reemitSignalingStateChangedEvents(_this, signaling);\r\n    log.info('Created a new Participant' + (_this.identity ? ': ' + _this.identity : ''));\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Get the {@link RemoteTrack} events to re-emit.\r\n   * @private\r\n   * @returns {Array<Array<string>>} events\r\n   */\r\n\r\n\r\n  _createClass(Participant, [{\r\n    key: '_getTrackEvents',\r\n    value: function _getTrackEvents() {\r\n      return [['dimensionsChanged', 'trackDimensionsChanged'], ['message', 'trackMessage'], ['started', 'trackStarted']];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: '_getTrackPublicationEvents',\r\n    value: function _getTrackPublicationEvents() {\r\n      return [];\r\n    }\r\n  }, {\r\n    key: 'toString',\r\n    value: function toString() {\r\n      return '[Participant #' + this._instanceId + ': ' + this.sid + ']';\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {RemoteTrack} track\r\n     * @param {Track.ID} id\r\n     * @returns {?RemoteTrack}\r\n     */\r\n\r\n  }, {\r\n    key: '_addTrack',\r\n    value: function _addTrack(track, id) {\r\n      var log = this._log;\r\n      if (this._tracks.has(id)) {\r\n        return null;\r\n      }\r\n      this._tracks.set(id, track);\r\n\r\n      var tracksByKind = {\r\n        audio: this._audioTracks,\r\n        video: this._videoTracks,\r\n        data: this._dataTracks\r\n      }[track.kind];\r\n      tracksByKind.set(id, track);\r\n      reemitTrackEvents(this, track, id);\r\n\r\n      log.info('Added a new ' + util.trackClass(track) + ':', id);\r\n      log.debug(util.trackClass(track) + ':', track);\r\n\r\n      return track;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {RemoteTrackPublication} publication\r\n     * @returns {?RemoteTrackPublication}\r\n     */\r\n\r\n  }, {\r\n    key: '_addTrackPublication',\r\n    value: function _addTrackPublication(publication) {\r\n      var log = this._log;\r\n      if (this.tracks.has(publication.trackSid)) {\r\n        return null;\r\n      }\r\n      this.tracks.set(publication.trackSid, publication);\r\n\r\n      var trackPublicationsByKind = {\r\n        audio: this.audioTracks,\r\n        data: this.dataTracks,\r\n        video: this.videoTracks\r\n      }[publication.kind];\r\n      trackPublicationsByKind.set(publication.trackSid, publication);\r\n      reemitTrackPublicationEvents(this, publication);\r\n\r\n      log.info('Added a new ' + util.trackPublicationClass(publication) + ':', publication.trackSid);\r\n      log.debug(util.trackPublicationClass(publication) + ':', publication);\r\n      return publication;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: '_handleTrackSignalingEvents',\r\n    value: function _handleTrackSignalingEvents() {\r\n      var log = this._log;\r\n      var self = this;\r\n\r\n      if (this.state === 'disconnected') {\r\n        return;\r\n      }\r\n\r\n      var RemoteAudioTrack = this._RemoteAudioTrack;\r\n      var RemoteAudioTrackPublication = this._RemoteAudioTrackPublication;\r\n      var RemoteVideoTrack = this._RemoteVideoTrack;\r\n      var RemoteVideoTrackPublication = this._RemoteVideoTrackPublication;\r\n      var RemoteDataTrack = this._RemoteDataTrack;\r\n      var RemoteDataTrackPublication = this._RemoteDataTrackPublication;\r\n      var participantSignaling = this._signaling;\r\n\r\n      function trackSignalingAdded(signaling) {\r\n        var RemoteTrackPublication = {\r\n          audio: RemoteAudioTrackPublication,\r\n          data: RemoteDataTrackPublication,\r\n          video: RemoteVideoTrackPublication\r\n        }[signaling.kind];\r\n\r\n        var publication = new RemoteTrackPublication(signaling, { log: log });\r\n        self._addTrackPublication(publication);\r\n\r\n        var isSubscribed = signaling.isSubscribed;\r\n        if (isSubscribed) {\r\n          trackSignalingSubscribed(signaling);\r\n        }\r\n\r\n        self._trackSignalingUpdatedEventCallbacks.set(signaling.sid, function () {\r\n          if (isSubscribed !== signaling.isSubscribed) {\r\n            isSubscribed = signaling.isSubscribed;\r\n            if (isSubscribed) {\r\n              trackSignalingSubscribed(signaling);\r\n              return;\r\n            }\r\n            trackSignalingUnsubscribed(signaling);\r\n          }\r\n        });\r\n        signaling.on('updated', self._trackSignalingUpdatedEventCallbacks.get(signaling.sid));\r\n      }\r\n\r\n      function trackSignalingRemoved(signaling) {\r\n        if (signaling.isSubscribed) {\r\n          signaling.setTrackTransceiver(null);\r\n        }\r\n        var updated = self._trackSignalingUpdatedEventCallbacks.get(signaling.sid);\r\n        if (updated) {\r\n          signaling.removeListener('updated', updated);\r\n          self._trackSignalingUpdatedEventCallbacks.delete(signaling.sid);\r\n        }\r\n        var publication = self.tracks.get(signaling.sid);\r\n        if (publication) {\r\n          self._removeTrackPublication(publication);\r\n        }\r\n      }\r\n\r\n      function trackSignalingSubscribed(signaling) {\r\n        var isEnabled = signaling.isEnabled,\r\n            name = signaling.name,\r\n            kind = signaling.kind,\r\n            sid = signaling.sid,\r\n            trackTransceiver = signaling.trackTransceiver,\r\n            isSwitchedOff = signaling.isSwitchedOff;\r\n\r\n        var RemoteTrack = {\r\n          audio: RemoteAudioTrack,\r\n          video: RemoteVideoTrack,\r\n          data: RemoteDataTrack\r\n        }[kind];\r\n\r\n        var publication = self.tracks.get(sid);\r\n\r\n        // NOTE(mroberts): It should never be the case that the TrackSignaling and\r\n        // MediaStreamTrack or DataTrackReceiver kinds disagree; however, just in\r\n        // case, we handle it here.\r\n        if (!RemoteTrack || kind !== trackTransceiver.kind) {\r\n          return;\r\n        }\r\n\r\n        var options = { log: log, name: name };\r\n        var setPriority = function setPriority(newPriority) {\r\n          return participantSignaling.updateSubscriberTrackPriority(sid, newPriority);\r\n        };\r\n        var track = kind === 'data' ? new RemoteTrack(sid, trackTransceiver, options) : new RemoteTrack(sid, trackTransceiver, isEnabled, isSwitchedOff, setPriority, options);\r\n\r\n        self._addTrack(track, publication, trackTransceiver.id);\r\n      }\r\n\r\n      function trackSignalingUnsubscribed(signaling) {\r\n        var _Array$from$find = Array.from(self._tracks.entries()).find(function (_ref) {\r\n          var _ref2 = _slicedToArray(_ref, 2),\r\n              track = _ref2[1];\r\n\r\n          return track.sid === signaling.sid;\r\n        }),\r\n            _Array$from$find2 = _slicedToArray(_Array$from$find, 2),\r\n            id = _Array$from$find2[0],\r\n            track = _Array$from$find2[1];\r\n\r\n        var publication = self.tracks.get(signaling.sid);\r\n        if (track) {\r\n          self._removeTrack(track, publication, id);\r\n        }\r\n      }\r\n\r\n      participantSignaling.on('trackAdded', trackSignalingAdded);\r\n      participantSignaling.on('trackRemoved', trackSignalingRemoved);\r\n\r\n      participantSignaling.tracks.forEach(trackSignalingAdded);\r\n\r\n      participantSignaling.on('stateChanged', function stateChanged(state) {\r\n        if (state === 'disconnected') {\r\n          log.debug('Removing event listeners');\r\n          participantSignaling.removeListener('stateChanged', stateChanged);\r\n          participantSignaling.removeListener('trackAdded', trackSignalingAdded);\r\n          participantSignaling.removeListener('trackRemoved', trackSignalingRemoved);\r\n        } else if (state === 'connected') {\r\n          // NOTE(mmalavalli): Any transition to \"connected\" here is a result of\r\n          // successful signaling reconnection, and not a first-time establishment\r\n          // of the signaling connection.\r\n          log.info('reconnected');\r\n\r\n          // NOTE(mpatwardhan): `stateChanged` can get emitted with StateMachine locked.\r\n          // Do not signal  public events synchronously with lock held.\r\n          setTimeout(function () {\r\n            return self.emit('reconnected');\r\n          }, 0);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {RemoteTrack} track\r\n     * @param {Track.ID} id\r\n     * @returns {?RemoteTrack}\r\n     */\r\n\r\n  }, {\r\n    key: '_removeTrack',\r\n    value: function _removeTrack(track, id) {\r\n      if (!this._tracks.has(id)) {\r\n        return null;\r\n      }\r\n      this._tracks.delete(id);\r\n\r\n      var tracksByKind = {\r\n        audio: this._audioTracks,\r\n        video: this._videoTracks,\r\n        data: this._dataTracks\r\n      }[track.kind];\r\n      tracksByKind.delete(id);\r\n\r\n      var reemitters = this._trackEventReemitters.get(id) || new Map();\r\n      reemitters.forEach(function (reemitter, event) {\r\n        track.removeListener(event, reemitter);\r\n      });\r\n\r\n      var log = this._log;\r\n      log.info('Removed a ' + util.trackClass(track) + ':', id);\r\n      log.debug(util.trackClass(track) + ':', track);\r\n      return track;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {RemoteTrackPublication} publication\r\n     * @returns {?RemoteTrackPublication}\r\n     */\r\n\r\n  }, {\r\n    key: '_removeTrackPublication',\r\n    value: function _removeTrackPublication(publication) {\r\n      publication = this.tracks.get(publication.trackSid);\r\n      if (!publication) {\r\n        return null;\r\n      }\r\n      this.tracks.delete(publication.trackSid);\r\n\r\n      var trackPublicationsByKind = {\r\n        audio: this.audioTracks,\r\n        data: this.dataTracks,\r\n        video: this.videoTracks\r\n      }[publication.kind];\r\n      trackPublicationsByKind.delete(publication.trackSid);\r\n\r\n      var reemitters = this._trackPublicationEventReemitters.get(publication.trackSid) || new Map();\r\n      reemitters.forEach(function (reemitter, event) {\r\n        publication.removeListener(event, reemitter);\r\n      });\r\n\r\n      var log = this._log;\r\n      log.info('Removed a ' + util.trackPublicationClass(publication) + ':', publication.trackSid);\r\n      log.debug(util.trackPublicationClass(publication) + ':', publication);\r\n      return publication;\r\n    }\r\n  }, {\r\n    key: 'toJSON',\r\n    value: function toJSON() {\r\n      return util.valueToJSON(this);\r\n    }\r\n  }]);\r\n\r\n  return Participant;\r\n}(EventEmitter);\r\n\r\n/**\r\n * A {@link Participant.SID} is a 34-character string starting with \"PA\"\r\n * that uniquely identifies a {@link Participant}.\r\n * @type string\r\n * @typedef Participant.SID\r\n */\r\n\r\n/**\r\n * A {@link Participant.Identity} is a string that identifies a\r\n * {@link Participant}. You can think of it like a name.\r\n * @typedef {string} Participant.Identity\r\n */\r\n\r\n/**\r\n * The {@link Participant} has disconnected.\r\n * @param {Participant} participant - The {@link Participant} that disconnected.\r\n * @event Participant#disconnected\r\n */\r\n\r\n/**\r\n * The {@link Participant}'s {@link NetworkQualityLevel} changed.\r\n * @param {NetworkQualityLevel} networkQualityLevel - The new\r\n *   {@link NetworkQualityLevel}\r\n * @param {?NetworkQualityStats} networkQualityStats - The {@link NetworkQualityStats}\r\n *   based on which {@link NetworkQualityLevel} is calculated, if any\r\n * @event Participant#networkQualityLevelChanged\r\n */\r\n\r\n/**\r\n * The {@link Participant} has reconnected to the {@link Room} after a signaling connection disruption.\r\n * @event Participant#reconnected\r\n */\r\n\r\n/**\r\n * The {@link Participant} is reconnecting to the {@link Room} after a signaling connection disruption.\r\n * @event Participant#reconnecting\r\n */\r\n\r\n/**\r\n * One of the {@link Participant}'s {@link VideoTrack}'s dimensions changed.\r\n * @param {VideoTrack} track - The {@link VideoTrack} whose dimensions changed\r\n * @event Participant#trackDimensionsChanged\r\n */\r\n\r\n/**\r\n * One of the {@link Participant}'s {@link Track}s started.\r\n * @param {Track} track - The {@link Track} that started\r\n * @event Participant#trackStarted\r\n */\r\n\r\n/**\r\n * Indexed {@link Track}s by {@link Track.ID}.\r\n * @typedef {object} IndexedTracks\r\n * @property {Array<{0: Track.ID, 1: AudioTrack}>} audioTracks - Indexed\r\n *   {@link AudioTrack}s\r\n * @property {Array<{0: Track.ID, 1: DataTrack}>} dataTracks - Indexed\r\n *   {@link DataTrack}s\r\n * @property {Array<{0: Track.ID, 1: Track}>} tracks - Indexed {@link Track}s\r\n * @property {Array<{0: Track.ID, 1: VideoTrack}>} videoTracks - Indexed\r\n *   {@link VideoTrack}s\r\n * @private\r\n */\r\n\r\n/**\r\n * Index tracks by {@link Track.ID}.\r\n * @param {Array<Track>} tracks\r\n * @returns {IndexedTracks}\r\n * @private\r\n */\r\n\r\n\r\nfunction indexTracksById(tracks) {\r\n  var indexedTracks = tracks.map(function (track) {\r\n    return [track.id, track];\r\n  });\r\n  var indexedAudioTracks = indexedTracks.filter(function (keyValue) {\r\n    return keyValue[1].kind === 'audio';\r\n  });\r\n  var indexedVideoTracks = indexedTracks.filter(function (keyValue) {\r\n    return keyValue[1].kind === 'video';\r\n  });\r\n  var indexedDataTracks = indexedTracks.filter(function (keyValue) {\r\n    return keyValue[1].kind === 'data';\r\n  });\r\n\r\n  return {\r\n    audioTracks: indexedAudioTracks,\r\n    dataTracks: indexedDataTracks,\r\n    tracks: indexedTracks,\r\n    videoTracks: indexedVideoTracks\r\n  };\r\n}\r\n\r\n/**\r\n * Re-emit {@link ParticipantSignaling} 'stateChanged' events.\r\n * @param {Participant} participant\r\n * @param {ParticipantSignaling} signaling\r\n * @private\r\n */\r\nfunction reemitSignalingStateChangedEvents(participant, signaling) {\r\n  var log = participant._log;\r\n\r\n  if (participant.state === 'disconnected') {\r\n    return;\r\n  }\r\n\r\n  // Reemit state transition events from the ParticipantSignaling.\r\n  signaling.on('stateChanged', function stateChanged(state) {\r\n    log.debug('Transitioned to state:', state);\r\n    participant.emit(state, participant);\r\n    if (state === 'disconnected') {\r\n      log.debug('Removing Track event reemitters');\r\n      signaling.removeListener('stateChanged', stateChanged);\r\n\r\n      participant._tracks.forEach(function (track) {\r\n        var reemitters = participant._trackEventReemitters.get(track.id);\r\n        if (track && reemitters) {\r\n          reemitters.forEach(function (reemitter, event) {\r\n            track.removeListener(event, reemitter);\r\n          });\r\n        }\r\n      });\r\n\r\n      // TODO(joma): Removing this introduced unit test failures in the RemoteParticipant.\r\n      // Investigate further before removing.\r\n      signaling.tracks.forEach(function (trackSignaling) {\r\n        var track = participant._tracks.get(trackSignaling.id);\r\n        var reemitters = participant._trackEventReemitters.get(trackSignaling.id);\r\n        if (track && reemitters) {\r\n          reemitters.forEach(function (reemitter, event) {\r\n            track.removeListener(event, reemitter);\r\n          });\r\n        }\r\n      });\r\n\r\n      participant._trackEventReemitters.clear();\r\n\r\n      participant.tracks.forEach(function (publication) {\r\n        participant._trackPublicationEventReemitters.get(publication.trackSid).forEach(function (reemitter, event) {\r\n          publication.removeListener(event, reemitter);\r\n        });\r\n      });\r\n      participant._trackPublicationEventReemitters.clear();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Re-emit {@link Track} events.\r\n * @param {Participant} participant\r\n * @param {Track} track\r\n * @param {Track.ID} id\r\n * @private\r\n */\r\nfunction reemitTrackEvents(participant, track, id) {\r\n  var trackEventReemitters = new Map();\r\n\r\n  if (participant.state === 'disconnected') {\r\n    return;\r\n  }\r\n\r\n  participant._getTrackEvents().forEach(function (eventPair) {\r\n    var trackEvent = eventPair[0];\r\n    var participantEvent = eventPair[1];\r\n\r\n    trackEventReemitters.set(trackEvent, function () {\r\n      var args = [participantEvent].concat([].slice.call(arguments));\r\n      return participant.emit.apply(participant, _toConsumableArray(args));\r\n    });\r\n\r\n    track.on(trackEvent, trackEventReemitters.get(trackEvent));\r\n  });\r\n\r\n  participant._trackEventReemitters.set(id, trackEventReemitters);\r\n}\r\n\r\n/**\r\n * Re-emit {@link TrackPublication} events.\r\n * @private\r\n * @param {Participant} participant\r\n * @param {TrackPublication} publication\r\n */\r\nfunction reemitTrackPublicationEvents(participant, publication) {\r\n  var publicationEventReemitters = new Map();\r\n\r\n  if (participant.state === 'disconnected') {\r\n    return;\r\n  }\r\n\r\n  participant._getTrackPublicationEvents().forEach(function (_ref3) {\r\n    var _ref4 = _slicedToArray(_ref3, 2),\r\n        publicationEvent = _ref4[0],\r\n        participantEvent = _ref4[1];\r\n\r\n    publicationEventReemitters.set(publicationEvent, function () {\r\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      participant.emit.apply(participant, [participantEvent].concat(args, [publication]));\r\n    });\r\n    publication.on(publicationEvent, publicationEventReemitters.get(publicationEvent));\r\n  });\r\n\r\n  participant._trackPublicationEventReemitters.set(publication.trackSid, publicationEventReemitters);\r\n}\r\n\r\nmodule.exports = Participant;"]},"metadata":{},"sourceType":"script"}