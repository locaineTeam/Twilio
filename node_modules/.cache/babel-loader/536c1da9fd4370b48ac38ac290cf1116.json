{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst platform = require(\"platform\");\n\nclass Metadata {\n  static getMetadata(options) {\n    let platformInfo = typeof navigator !== 'undefined' ? platform.parse(navigator.userAgent) : platform;\n    let overrides = options && options.clientMetadata ? options.clientMetadata : {};\n    const fieldNames = ['ver', 'env', 'envv', 'os', 'osv', 'osa', 'type', 'sdk', 'sdkv', 'dev', 'devv', 'devt', 'app', 'appv'];\n    const defaults = {\n      'env': platform.name,\n      'envv': platform.version,\n      'os': platform.os.family,\n      'osv': platform.os.version,\n      'osa': platform.os.architecture,\n      'sdk': 'js-default'\n    };\n    let finalClientMetadata = {};\n    fieldNames.filter(key => key in overrides || key in defaults).forEach(key => finalClientMetadata[key] = key in overrides ? overrides[key] : defaults[key]);\n    return finalClientMetadata;\n  }\n\n}\n\nexports.Metadata = Metadata;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/node_modules/twilsock/lib/metadata.js"],"names":["Object","defineProperty","exports","value","platform","require","Metadata","getMetadata","options","platformInfo","navigator","parse","userAgent","overrides","clientMetadata","fieldNames","defaults","name","version","os","family","architecture","finalClientMetadata","filter","key","forEach"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,QAAN,CAAe;AACO,SAAXC,WAAW,CAACC,OAAD,EAAU;AACxB,QAAIC,YAAY,GAAG,OAAOC,SAAP,KAAqB,WAArB,GACbN,QAAQ,CAACO,KAAT,CAAeD,SAAS,CAACE,SAAzB,CADa,GAEbR,QAFN;AAGA,QAAIS,SAAS,GAAGL,OAAO,IAAIA,OAAO,CAACM,cAAnB,GACVN,OAAO,CAACM,cADE,GAEV,EAFN;AAGA,UAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,KAApC,EACf,MADe,EACP,KADO,EACA,MADA,EACQ,KADR,EACe,MADf,EACuB,MADvB,EAC+B,KAD/B,EACsC,MADtC,CAAnB;AAEA,UAAMC,QAAQ,GAAG;AACb,aAAOZ,QAAQ,CAACa,IADH;AAEb,cAAQb,QAAQ,CAACc,OAFJ;AAGb,YAAMd,QAAQ,CAACe,EAAT,CAAYC,MAHL;AAIb,aAAOhB,QAAQ,CAACe,EAAT,CAAYD,OAJN;AAKb,aAAOd,QAAQ,CAACe,EAAT,CAAYE,YALN;AAMb,aAAO;AANM,KAAjB;AAQA,QAAIC,mBAAmB,GAAG,EAA1B;AACAP,IAAAA,UAAU,CACLQ,MADL,CACYC,GAAG,IAAIA,GAAG,IAAIX,SAAP,IAAoBW,GAAG,IAAIR,QAD9C,EAEKS,OAFL,CAEaD,GAAG,IAAIF,mBAAmB,CAACE,GAAD,CAAnB,GAA2BA,GAAG,IAAIX,SAAP,GAAmBA,SAAS,CAACW,GAAD,CAA5B,GAAoCR,QAAQ,CAACQ,GAAD,CAF3F;AAGA,WAAOF,mBAAP;AACH;;AAvBU;;AAyBfpB,OAAO,CAACI,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst platform = require(\"platform\");\r\nclass Metadata {\r\n    static getMetadata(options) {\r\n        let platformInfo = typeof navigator !== 'undefined'\r\n            ? platform.parse(navigator.userAgent)\r\n            : platform;\r\n        let overrides = options && options.clientMetadata\r\n            ? options.clientMetadata\r\n            : {};\r\n        const fieldNames = ['ver', 'env', 'envv', 'os', 'osv', 'osa',\r\n            'type', 'sdk', 'sdkv', 'dev', 'devv', 'devt', 'app', 'appv'];\r\n        const defaults = {\r\n            'env': platform.name,\r\n            'envv': platform.version,\r\n            'os': platform.os.family,\r\n            'osv': platform.os.version,\r\n            'osa': platform.os.architecture,\r\n            'sdk': 'js-default'\r\n        };\r\n        let finalClientMetadata = {};\r\n        fieldNames\r\n            .filter(key => key in overrides || key in defaults)\r\n            .forEach(key => finalClientMetadata[key] = key in overrides ? overrides[key] : defaults[key]);\r\n        return finalClientMetadata;\r\n    }\r\n}\r\nexports.Metadata = Metadata;\r\n"]},"metadata":{},"sourceType":"script"}