{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ARSW III\\\\Twilio\\\\src\\\\App.js\";\nimport './App.scss';\nimport React, { Component, useState } from 'react';\nimport Select from 'react-select'; // import ChatApp from './ChatApp';\n\nimport Room from './Room';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  connect\n} = require('twilio-video');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identity: '',\n      room: null\n    };\n    this.inputRef = /*#__PURE__*/React.createRef();\n    this.joinRoom = this.joinRoom.bind(this);\n    this.returnToLobby = this.returnToLobby.bind(this);\n    this.updateIdentity = this.updateIdentity.bind(this);\n    this.removePlaceholderText = this.removePlaceholderText.bind(this);\n    this.data = [{\n      value: 1,\n      label: \"Español\"\n    }, {\n      value: 2,\n      label: \"English\"\n    }, {\n      value: 3,\n      label: \"French\"\n    }, {\n      value: 0,\n      label: \"\"\n    }];\n    const [selectedValue, setSelectedValue] = useState(3);\n\n    const handleChange = e => {\n      setSelectedValue(e.value);\n    };\n  }\n\n  async joinRoom(roomName) {\n    try {\n      const response = await fetch(`https://warm-hollows-35856.herokuapp.com/getTwilioToken?identity=${this.state.identity}`);\n      const data = await response.json();\n      const room = await connect(data.token, {\n        name: roomName,\n        audio: true,\n        video: true\n      });\n      this.setState({\n        room: room\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  returnToLobby() {\n    this.setState({\n      room: null\n    });\n  }\n\n  removePlaceholderText() {\n    this.inputRef.current.placeholder = '';\n  }\n\n  updateIdentity(event) {\n    this.setState({\n      identity: event.target.value\n    });\n  }\n\n  render() {\n    const disabled = this.state.identity === '' ? true : false;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: this.state.room === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lobby\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.identity,\n          onChange: this.updateIdentity,\n          ref: this.inputRef,\n          onClick: this.removePlaceholderText,\n          placeholder: \"What's your name?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select Room\",\n          value: this.data.find(obj => obj.value === selectedValue) // set selected value\n          ,\n          options: this.data // set list of the data\n          ,\n          onChange: handleChange // assign onChange function\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: disabled,\n          onClick: this.joinRoom({\n            selectedValue\n          }),\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Room, {\n        returnToLobby: this.returnToLobby,\n        room: this.state.room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/src/App.js"],"names":["React","Component","useState","Select","Room","connect","require","App","constructor","props","state","identity","room","inputRef","createRef","joinRoom","bind","returnToLobby","updateIdentity","removePlaceholderText","data","value","label","selectedValue","setSelectedValue","handleChange","e","roomName","response","fetch","json","token","name","audio","video","setState","err","console","log","current","placeholder","event","target","render","disabled","find","obj"],"mappings":"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","sourcesContent":["import './App.scss';\r\nimport React, {Component, useState} from 'react';\r\nimport Select from 'react-select';\r\n// import ChatApp from './ChatApp';\r\nimport Room from './Room';\r\nconst { connect } = require('twilio-video');\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n\r\n \r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            identity: '',\r\n            room: null\r\n        }\r\n\r\n        this.inputRef = React.createRef();\r\n        this.joinRoom = this.joinRoom.bind(this);\r\n        this.returnToLobby = this.returnToLobby.bind(this);\r\n        this.updateIdentity = this.updateIdentity.bind(this);\r\n        this.removePlaceholderText = this.removePlaceholderText.bind(this)\r\n        this.data = [\r\n            {\r\n              value: 1,\r\n              label: \"Español\"\r\n            },\r\n            {\r\n              value: 2,\r\n              label: \"English\"\r\n            },\r\n            {\r\n              value: 3,\r\n              label: \"French\"\r\n            },\r\n            {\r\n              value: 0,\r\n              label: \"\"\r\n            }\r\n        ];\r\n\r\n    const [selectedValue, setSelectedValue] = useState(3);\r\n\r\n    const handleChange = e => {\r\n        setSelectedValue(e.value);\r\n    }\r\n    }\r\n\r\n\r\n\r\n    \r\n    async joinRoom(roomName) {\r\n        try {\r\n            const response = await fetch(`https://warm-hollows-35856.herokuapp.com/getTwilioToken?identity=${this.state.identity}`);\r\n\r\n            const data = await response.json();\r\n            \r\n            \r\n            const room = await connect(data.token, {\r\n                name: roomName,\r\n                audio: true,\r\n                video: true            \r\n            });\r\n\r\n            this.setState({ room: room });\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    returnToLobby() {\r\n        this.setState({ room: null });\r\n    }\r\n\r\n\r\n    removePlaceholderText() {\r\n        this.inputRef.current.placeholder = '';\r\n\r\n    }\r\n\r\n\r\n    updateIdentity(event) {\r\n        this.setState({\r\n            identity: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const disabled = this.state.identity === '' ? true : false;\r\n        console.log(this.state);\r\n        \r\n        \r\n        return (\r\n            <div className=\"app\">\r\n                {\r\n                    this.state.room === null\r\n                        ? <div className=\"lobby\">\r\n                            <input\r\n                                value={this.state.identity}\r\n                                onChange={this.updateIdentity}\r\n                                ref={this.inputRef}\r\n                                onClick={this.removePlaceholderText}\r\n                                placeholder=\"What's your name?\"/>\r\n\r\n                            <Select\r\n                                placeholder=\"Select Room\"\r\n                                value={this.data.find(obj => obj.value === selectedValue)} // set selected value\r\n                                options={this.data} // set list of the data\r\n                                onChange={handleChange} // assign onChange function\r\n                              />\r\n\r\n                            <button disabled={disabled} onClick={this.joinRoom({selectedValue})}>Join Room</button>\r\n                            \r\n                        </div>\r\n                        : <Room returnToLobby={this.returnToLobby} room={this.state.room} />\r\n\r\n\r\n\r\n                }\r\n            </div>\r\n\r\n\r\n            \r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}