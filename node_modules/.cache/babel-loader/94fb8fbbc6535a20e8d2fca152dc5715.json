{"ast":null,"code":"\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _set = require(\"babel-runtime/core-js/set\");\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Channels = exports.Channel = void 0;\n\nvar events_1 = require(\"events\");\n\nvar logger_1 = require(\"../logger\");\n\nvar channel_1 = require(\"../channel\");\n\nObject.defineProperty(exports, \"Channel\", {\n  enumerable: true,\n  get: function get() {\n    return channel_1.Channel;\n  }\n});\n\nvar deferred_1 = require(\"../util/deferred\");\n\nvar util_1 = require(\"../util\");\n\nvar log = logger_1.Logger.scope('Channels');\n/**\n * Represents channels collection\n * {@see Channel}\n */\n\nvar Channels = function (_events_1$EventEmitte) {\n  (0, _inherits3.default)(Channels, _events_1$EventEmitte);\n\n  function Channels(services) {\n    (0, _classCallCheck3.default)(this, Channels);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Channels.__proto__ || (0, _getPrototypeOf2.default)(Channels)).call(this));\n\n    _this.services = services;\n    _this.channels = new _map2.default();\n    _this.thumbstones = new _set2.default();\n    _this.syncListFetched = false;\n    _this.syncListRead = new deferred_1.Deferred();\n    return _this;\n  }\n\n  (0, _createClass3.default)(Channels, [{\n    key: \"getMap\",\n    value: function getMap() {\n      var _this2 = this;\n\n      return this.services.session.getMyChannelsId().then(function (name) {\n        return _this2.services.syncClient.map({\n          id: name,\n          mode: 'open_existing'\n        });\n      });\n    }\n    /**\n     * Add channel to server\n     * @private\n     * @returns {Promise<Channel>} Channel\n     */\n\n  }, {\n    key: \"addChannel\",\n    value: function () {\n      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n        var attributes, response, channelSid, channelDocument, existingChannel, channel;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                attributes = void 0;\n\n                if (typeof options.attributes === 'undefined') {\n                  attributes = {};\n                } else {\n                  attributes = options.attributes;\n                }\n\n                _context.next = 4;\n                return this.services.session.addCommand('createChannel', {\n                  friendlyName: options.friendlyName,\n                  uniqueName: options.uniqueName,\n                  type: options.isPrivate ? 'private' : 'public',\n                  attributes: (0, _stringify2.default)(attributes)\n                });\n\n              case 4:\n                response = _context.sent;\n                channelSid = 'channelSid' in response ? response['channelSid'] : null;\n                channelDocument = 'channel' in response ? response['channel'] : null;\n                existingChannel = this.channels.get(channelSid);\n\n                if (!existingChannel) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 11;\n                return existingChannel._subscribe();\n\n              case 11:\n                return _context.abrupt(\"return\", existingChannel);\n\n              case 12:\n                channel = new channel_1.Channel(this.services, {\n                  channel: channelDocument,\n                  entityName: null,\n                  uniqueName: null,\n                  attributes: null,\n                  createdBy: null,\n                  friendlyName: null,\n                  lastConsumedMessageIndex: null,\n                  type: options.isPrivate ? 'private' : 'public',\n                  dateCreated: null,\n                  dateUpdated: null\n                }, channelSid);\n                this.channels.set(channel.sid, channel);\n                this.registerForEvents(channel);\n                _context.next = 17;\n                return channel._subscribe();\n\n              case 17:\n                this.emit('channelAdded', channel);\n                return _context.abrupt(\"return\", channel);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addChannel(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return addChannel;\n    }()\n    /**\n     * Fetch channels list and instantiate all necessary objects\n     */\n\n  }, {\n    key: \"fetchChannels\",\n    value: function fetchChannels() {\n      var _this3 = this;\n\n      this.getMap().then(function () {\n        var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(map) {\n          var upserts, paginator, items;\n          return _regenerator2.default.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  map.on('itemAdded', function (args) {\n                    log.debug('itemAdded: ' + args.item.key);\n\n                    _this3.upsertChannel('sync', args.item.key, args.item.value);\n                  });\n                  map.on('itemRemoved', function (args) {\n                    log.debug('itemRemoved: ' + args.key);\n                    var sid = args.key;\n\n                    if (!_this3.syncListFetched) {\n                      _this3.thumbstones.add(sid);\n                    }\n\n                    var channel = _this3.channels.get(sid);\n\n                    if (channel) {\n                      if (channel.status === 'joined' || channel.status === 'invited') {\n                        channel._setStatus('notParticipating', 'sync');\n\n                        _this3.emit('channelLeft', channel);\n                      }\n\n                      if (channel.isPrivate) {\n                        _this3.channels.delete(sid);\n\n                        _this3.emit('channelRemoved', channel);\n\n                        channel.emit('removed', channel);\n                      }\n                    }\n                  });\n                  map.on('itemUpdated', function (args) {\n                    log.debug('itemUpdated: ' + args.item.key);\n\n                    _this3.upsertChannel('sync', args.item.key, args.item.value);\n                  });\n                  upserts = [];\n                  _context2.next = 6;\n                  return _this3.services.syncList.getPage();\n\n                case 6:\n                  paginator = _context2.sent;\n                  items = paginator.items;\n                  items.forEach(function (item) {\n                    upserts.push(_this3.upsertChannel('synclist', item.channel_sid, item));\n                  });\n\n                case 9:\n                  if (!paginator.hasNextPage) {\n                    _context2.next = 16;\n                    break;\n                  }\n\n                  _context2.next = 12;\n                  return paginator.nextPage();\n\n                case 12:\n                  paginator = _context2.sent;\n                  paginator.items.forEach(function (item) {\n                    upserts.push(_this3.upsertChannel('synclist', item.channel_sid, item));\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 16:\n                  _this3.syncListRead.set(true);\n\n                  return _context2.abrupt(\"return\", _promise2.default.all(upserts));\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, _this3);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).then(function () {\n        _this3.syncListFetched = true;\n\n        _this3.thumbstones.clear();\n\n        log.debug('Channels list fetched');\n      }).then(function () {\n        return _this3;\n      }).catch(function (e) {\n        if (_this3.services.syncClient.connectionState != 'disconnected') {\n          log.error('Failed to get channels list', e);\n        }\n\n        log.debug('ERROR: Failed to get channels list', e);\n        throw e;\n      });\n    }\n  }, {\n    key: \"_wrapPaginator\",\n    value: function _wrapPaginator(page, op) {\n      var _this4 = this;\n\n      return op(page.items).then(function (items) {\n        return {\n          items: items,\n          hasNextPage: page.hasNextPage,\n          hasPrevPage: page.hasPrevPage,\n          nextPage: function nextPage() {\n            return page.nextPage().then(function (x) {\n              return _this4._wrapPaginator(x, op);\n            });\n          },\n          prevPage: function prevPage() {\n            return page.prevPage().then(function (x) {\n              return _this4._wrapPaginator(x, op);\n            });\n          }\n        };\n      });\n    }\n  }, {\n    key: \"getChannels\",\n    value: function getChannels(args) {\n      var _this5 = this;\n\n      return this.getMap().then(function (channelsMap) {\n        return channelsMap.getItems(args);\n      }).then(function (page) {\n        return _this5._wrapPaginator(page, function (items) {\n          return _promise2.default.all(items.map(function (item) {\n            return _this5.upsertChannel('sync', item.key, item.value);\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"getChannel\",\n    value: function getChannel(sid) {\n      var _this6 = this;\n\n      return this.getMap().then(function (channelsMap) {\n        return channelsMap.getItems({\n          key: sid\n        });\n      }).then(function (page) {\n        return page.items.map(function (item) {\n          return _this6.upsertChannel('sync', item.key, item.value);\n        });\n      }).then(function (items) {\n        return items.length > 0 ? items[0] : null;\n      });\n    }\n  }, {\n    key: \"pushChannel\",\n    value: function pushChannel(descriptor) {\n      var sid = descriptor.sid;\n      var data = {\n        entityName: null,\n        lastConsumedMessageIndex: descriptor.lastConsumedMessageIndex,\n        type: descriptor.type,\n        status: descriptor.status,\n        friendlyName: descriptor.friendlyName,\n        dateUpdated: descriptor.dateUpdated,\n        dateCreated: descriptor.dateCreated,\n        uniqueName: descriptor.uniqueName,\n        createdBy: descriptor.createdBy,\n        attributes: descriptor.attributes,\n        channel: descriptor.channel,\n        notificationLevel: descriptor.notificationLevel,\n        sid: sid\n      };\n      return this.upsertChannel('chat', sid, data);\n    }\n  }, {\n    key: \"upsertChannel\",\n    value: function upsertChannel(source, sid, data) {\n      var _this7 = this;\n\n      log.trace('upsertChannel(sid=' + sid + ', data=', data);\n      var channel = this.channels.get(sid); // Update the Channel's status if we know about it\n\n      if (channel) {\n        log.trace('upsertChannel: channel ' + sid + ' is known and it\\'s' + ' status is known from source ' + channel._statusSource() + ' and update came from source ' + source, channel);\n\n        if (typeof channel._statusSource() === 'undefined' || source === channel._statusSource() || source === 'synclist' && channel._statusSource() !== 'sync' || source === 'sync') {\n          if (data.status === 'joined' && channel.status !== 'joined') {\n            channel._setStatus('joined', source);\n\n            var updateData = {};\n\n            if (typeof data.notificationLevel !== 'undefined') {\n              updateData.notificationLevel = data.notificationLevel;\n            }\n\n            if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n              updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n            }\n\n            if (!util_1.isDeepEqual(updateData, {})) {\n              channel._update(updateData);\n            }\n\n            channel._subscribe().then(function () {\n              _this7.emit('channelJoined', channel);\n            });\n          } else if (data.status === 'invited' && channel.status !== 'invited') {\n            channel._setStatus('invited', source);\n\n            var _updateData = {};\n\n            if (typeof data.notificationLevel !== 'undefined') {\n              _updateData.notificationLevel = data.notificationLevel;\n            }\n\n            if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n              _updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n            }\n\n            if (!util_1.isDeepEqual(_updateData, {})) {\n              channel._update(_updateData);\n            }\n\n            channel._subscribe().then(function () {\n              _this7.emit('channelInvited', channel);\n            });\n          } else if (data.status === 'notParticipating' && (channel.status === 'invited' || channel.status === 'joined')) {\n            channel._setStatus('notParticipating', source);\n\n            channel._update(data);\n\n            channel._subscribe().then(function () {\n              _this7.emit('channelLeft', channel);\n            });\n          } else if (data.status === 'notParticipating' && data.type === 'private') {\n            channel._subscribe();\n          } else {\n            channel._update(data);\n          }\n        } else {\n          log.trace('upsertChannel: channel is known from sync and came from chat, ignoring', {\n            sid: sid,\n            data: data.status,\n            channel: channel.status\n          });\n        }\n\n        return channel._subscribe().then(function () {\n          return channel;\n        });\n      }\n\n      if ((source === 'chat' || source === 'synclist') && this.thumbstones.has(sid)) {\n        // if channel was deleted, we ignore it\n        log.trace('upsertChannel: channel is deleted and came again from chat, ignoring', sid);\n        return;\n      } // Fetch the Channel if we don't know about it\n\n\n      log.trace('upsertChannel: creating local channel object with sid ' + sid, data);\n      channel = new channel_1.Channel(this.services, data, sid);\n      this.channels.set(sid, channel);\n      return channel._subscribe().then(function () {\n        _this7.registerForEvents(channel);\n\n        _this7.emit('channelAdded', channel);\n\n        if (data.status === 'joined') {\n          channel._setStatus('joined', source);\n\n          _this7.emit('channelJoined', channel);\n        } else if (data.status === 'invited') {\n          channel._setStatus('invited', source);\n\n          _this7.emit('channelInvited', channel);\n        }\n\n        return channel;\n      });\n    }\n  }, {\n    key: \"onChannelRemoved\",\n    value: function onChannelRemoved(sid) {\n      var channel = this.channels.get(sid);\n\n      if (channel) {\n        this.channels.delete(sid);\n        this.emit('channelRemoved', channel);\n      }\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(channel) {\n      var _this8 = this;\n\n      channel.on('removed', function () {\n        return _this8.onChannelRemoved(channel.sid);\n      });\n      channel.on('updated', function (args) {\n        return _this8.emit('channelUpdated', args);\n      });\n      channel.on('memberJoined', this.emit.bind(this, 'memberJoined'));\n      channel.on('memberLeft', this.emit.bind(this, 'memberLeft'));\n      channel.on('memberUpdated', function (args) {\n        return _this8.emit('memberUpdated', args);\n      });\n      channel.on('messageAdded', this.emit.bind(this, 'messageAdded'));\n      channel.on('messageUpdated', function (args) {\n        return _this8.emit('messageUpdated', args);\n      });\n      channel.on('messageRemoved', this.emit.bind(this, 'messageRemoved'));\n      channel.on('typingStarted', this.emit.bind(this, 'typingStarted'));\n      channel.on('typingEnded', this.emit.bind(this, 'typingEnded'));\n    }\n  }]);\n  return Channels;\n}(events_1.EventEmitter);\n\nexports.Channels = Channels;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/node_modules/twilio-chat/browser/data/channels.js"],"names":["_promise","require","_promise2","_interopRequireDefault","_regenerator","_regenerator2","_stringify","_stringify2","_asyncToGenerator2","_asyncToGenerator3","_set","_set2","_map","_map2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","obj","__esModule","default","Object","defineProperty","exports","value","Channels","Channel","events_1","logger_1","channel_1","enumerable","get","deferred_1","util_1","log","Logger","scope","_events_1$EventEmitte","services","_this","__proto__","call","channels","thumbstones","syncListFetched","syncListRead","Deferred","key","getMap","_this2","session","getMyChannelsId","then","name","syncClient","map","id","mode","_ref","mark","_callee","options","attributes","response","channelSid","channelDocument","existingChannel","channel","wrap","_callee$","_context","prev","next","addCommand","friendlyName","uniqueName","type","isPrivate","sent","_subscribe","abrupt","entityName","createdBy","lastConsumedMessageIndex","dateCreated","dateUpdated","set","sid","registerForEvents","emit","stop","addChannel","_x","apply","arguments","fetchChannels","_this3","_ref2","_callee2","upserts","paginator","items","_callee2$","_context2","on","args","debug","item","upsertChannel","add","status","_setStatus","delete","syncList","getPage","forEach","push","channel_sid","hasNextPage","nextPage","all","_x2","clear","catch","e","connectionState","error","_wrapPaginator","page","op","_this4","hasPrevPage","x","prevPage","getChannels","_this5","channelsMap","getItems","getChannel","_this6","length","pushChannel","descriptor","data","notificationLevel","source","_this7","trace","_statusSource","updateData","isDeepEqual","_update","_updateData","has","onChannelRemoved","_this8","bind","EventEmitter"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,+BAAD,CAAtB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACH,QAAD,CAAtC;;AAEA,IAAII,YAAY,GAAGH,OAAO,CAAC,2BAAD,CAA1B;;AAEA,IAAII,aAAa,GAAGF,sBAAsB,CAACC,YAAD,CAA1C;;AAEA,IAAIE,UAAU,GAAGL,OAAO,CAAC,sCAAD,CAAxB;;AAEA,IAAIM,WAAW,GAAGJ,sBAAsB,CAACG,UAAD,CAAxC;;AAEA,IAAIE,kBAAkB,GAAGP,OAAO,CAAC,wCAAD,CAAhC;;AAEA,IAAIQ,kBAAkB,GAAGN,sBAAsB,CAACK,kBAAD,CAA/C;;AAEA,IAAIE,IAAI,GAAGT,OAAO,CAAC,2BAAD,CAAlB;;AAEA,IAAIU,KAAK,GAAGR,sBAAsB,CAACO,IAAD,CAAlC;;AAEA,IAAIE,IAAI,GAAGX,OAAO,CAAC,2BAAD,CAAlB;;AAEA,IAAIY,KAAK,GAAGV,sBAAsB,CAACS,IAAD,CAAlC;;AAEA,IAAIE,eAAe,GAAGb,OAAO,CAAC,+CAAD,CAA7B;;AAEA,IAAIc,gBAAgB,GAAGZ,sBAAsB,CAACW,eAAD,CAA7C;;AAEA,IAAIE,gBAAgB,GAAGf,OAAO,CAAC,sCAAD,CAA9B;;AAEA,IAAIgB,gBAAgB,GAAGd,sBAAsB,CAACa,gBAAD,CAA7C;;AAEA,IAAIE,aAAa,GAAGjB,OAAO,CAAC,mCAAD,CAA3B;;AAEA,IAAIkB,aAAa,GAAGhB,sBAAsB,CAACe,aAAD,CAA1C;;AAEA,IAAIE,2BAA2B,GAAGnB,OAAO,CAAC,iDAAD,CAAzC;;AAEA,IAAIoB,2BAA2B,GAAGlB,sBAAsB,CAACiB,2BAAD,CAAxD;;AAEA,IAAIE,UAAU,GAAGrB,OAAO,CAAC,gCAAD,CAAxB;;AAEA,IAAIsB,UAAU,GAAGpB,sBAAsB,CAACmB,UAAD,CAAvC;;AAEA,SAASnB,sBAAT,CAAgCqB,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/FG,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACG,OAAR,GAAkB,KAAK,CAA1C;;AACA,IAAIC,QAAQ,GAAGhC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAIiC,QAAQ,GAAGjC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIkC,SAAS,GAAGlC,OAAO,CAAC,YAAD,CAAvB;;AACA0B,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAC1E,WAAOF,SAAS,CAACH,OAAjB;AACH;AAFqC,CAA1C;;AAGA,IAAIM,UAAU,GAAGrC,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAIsC,MAAM,GAAGtC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIuC,GAAG,GAAGN,QAAQ,CAACO,MAAT,CAAgBC,KAAhB,CAAsB,UAAtB,CAAV;AACA;AACA;AACA;AACA;;AAEA,IAAIX,QAAQ,GAAG,UAAUY,qBAAV,EAAiC;AAC5C,GAAC,GAAGpB,UAAU,CAACG,OAAf,EAAwBK,QAAxB,EAAkCY,qBAAlC;;AAEA,WAASZ,QAAT,CAAkBa,QAAlB,EAA4B;AACxB,KAAC,GAAG3B,gBAAgB,CAACS,OAArB,EAA8B,IAA9B,EAAoCK,QAApC;;AAEA,QAAIc,KAAK,GAAG,CAAC,GAAGxB,2BAA2B,CAACK,OAAhC,EAAyC,IAAzC,EAA+C,CAACK,QAAQ,CAACe,SAAT,IAAsB,CAAC,GAAG/B,gBAAgB,CAACW,OAArB,EAA8BK,QAA9B,CAAvB,EAAgEgB,IAAhE,CAAqE,IAArE,CAA/C,CAAZ;;AAEAF,IAAAA,KAAK,CAACD,QAAN,GAAiBA,QAAjB;AACAC,IAAAA,KAAK,CAACG,QAAN,GAAiB,IAAInC,KAAK,CAACa,OAAV,EAAjB;AACAmB,IAAAA,KAAK,CAACI,WAAN,GAAoB,IAAItC,KAAK,CAACe,OAAV,EAApB;AACAmB,IAAAA,KAAK,CAACK,eAAN,GAAwB,KAAxB;AACAL,IAAAA,KAAK,CAACM,YAAN,GAAqB,IAAIb,UAAU,CAACc,QAAf,EAArB;AACA,WAAOP,KAAP;AACH;;AAED,GAAC,GAAG1B,aAAa,CAACO,OAAlB,EAA2BK,QAA3B,EAAqC,CAAC;AAClCsB,IAAAA,GAAG,EAAE,QAD6B;AAElCvB,IAAAA,KAAK,EAAE,SAASwB,MAAT,GAAkB;AACrB,UAAIC,MAAM,GAAG,IAAb;;AAEA,aAAO,KAAKX,QAAL,CAAcY,OAAd,CAAsBC,eAAtB,GAAwCC,IAAxC,CAA6C,UAAUC,IAAV,EAAgB;AAChE,eAAOJ,MAAM,CAACX,QAAP,CAAgBgB,UAAhB,CAA2BC,GAA3B,CAA+B;AAAEC,UAAAA,EAAE,EAAEH,IAAN;AAAYI,UAAAA,IAAI,EAAE;AAAlB,SAA/B,CAAP;AACH,OAFM,CAAP;AAGH;AACD;AACR;AACA;AACA;AACA;;AAb0C,GAAD,EAelC;AACCV,IAAAA,GAAG,EAAE,YADN;AAECvB,IAAAA,KAAK,EAAE,YAAY;AACf,UAAIkC,IAAI,GAAG,CAAC,GAAGvD,kBAAkB,CAACiB,OAAvB,GAAiC,aAAarB,aAAa,CAACqB,OAAd,CAAsBuC,IAAtB,CAA2B,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AAC1G,YAAIC,UAAJ,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,eAAtC,EAAuDC,eAAvD,EAAwEC,OAAxE;AACA,eAAOpE,aAAa,CAACqB,OAAd,CAAsBgD,IAAtB,CAA2B,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1D,iBAAO,CAAP,EAAU;AACN,oBAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACI,mBAAK,CAAL;AACIV,gBAAAA,UAAU,GAAG,KAAK,CAAlB;;AAEA,oBAAI,OAAOD,OAAO,CAACC,UAAf,KAA8B,WAAlC,EAA+C;AAC3CA,kBAAAA,UAAU,GAAG,EAAb;AACH,iBAFD,MAEO;AACHA,kBAAAA,UAAU,GAAGD,OAAO,CAACC,UAArB;AACH;;AACDQ,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA,uBAAO,KAAKlC,QAAL,CAAcY,OAAd,CAAsBuB,UAAtB,CAAiC,eAAjC,EAAkD;AACrDC,kBAAAA,YAAY,EAAEb,OAAO,CAACa,YAD+B;AAErDC,kBAAAA,UAAU,EAAEd,OAAO,CAACc,UAFiC;AAGrDC,kBAAAA,IAAI,EAAEf,OAAO,CAACgB,SAAR,GAAoB,SAApB,GAAgC,QAHe;AAIrDf,kBAAAA,UAAU,EAAE,CAAC,GAAG7D,WAAW,CAACmB,OAAhB,EAAyB0C,UAAzB;AAJyC,iBAAlD,CAAP;;AAOJ,mBAAK,CAAL;AACIC,gBAAAA,QAAQ,GAAGO,QAAQ,CAACQ,IAApB;AACAd,gBAAAA,UAAU,GAAG,gBAAgBD,QAAhB,GAA2BA,QAAQ,CAAC,YAAD,CAAnC,GAAoD,IAAjE;AACAE,gBAAAA,eAAe,GAAG,aAAaF,QAAb,GAAwBA,QAAQ,CAAC,SAAD,CAAhC,GAA8C,IAAhE;AACAG,gBAAAA,eAAe,GAAG,KAAKxB,QAAL,CAAcX,GAAd,CAAkBiC,UAAlB,CAAlB;;AAEA,oBAAI,CAACE,eAAL,EAAsB;AAClBI,kBAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA;AACH;;AAEDF,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA,uBAAON,eAAe,CAACa,UAAhB,EAAP;;AAEJ,mBAAK,EAAL;AACI,uBAAOT,QAAQ,CAACU,MAAT,CAAgB,QAAhB,EAA0Bd,eAA1B,CAAP;;AAEJ,mBAAK,EAAL;AACIC,gBAAAA,OAAO,GAAG,IAAItC,SAAS,CAACH,OAAd,CAAsB,KAAKY,QAA3B,EAAqC;AAC3C6B,kBAAAA,OAAO,EAAEF,eADkC;AAE3CgB,kBAAAA,UAAU,EAAE,IAF+B;AAG3CN,kBAAAA,UAAU,EAAE,IAH+B;AAI3Cb,kBAAAA,UAAU,EAAE,IAJ+B;AAK3CoB,kBAAAA,SAAS,EAAE,IALgC;AAM3CR,kBAAAA,YAAY,EAAE,IAN6B;AAO3CS,kBAAAA,wBAAwB,EAAE,IAPiB;AAQ3CP,kBAAAA,IAAI,EAAEf,OAAO,CAACgB,SAAR,GAAoB,SAApB,GAAgC,QARK;AAS3CO,kBAAAA,WAAW,EAAE,IAT8B;AAU3CC,kBAAAA,WAAW,EAAE;AAV8B,iBAArC,EAWPrB,UAXO,CAAV;AAaA,qBAAKtB,QAAL,CAAc4C,GAAd,CAAkBnB,OAAO,CAACoB,GAA1B,EAA+BpB,OAA/B;AACA,qBAAKqB,iBAAL,CAAuBrB,OAAvB;AACAG,gBAAAA,QAAQ,CAACE,IAAT,GAAgB,EAAhB;AACA,uBAAOL,OAAO,CAACY,UAAR,EAAP;;AAEJ,mBAAK,EAAL;AACI,qBAAKU,IAAL,CAAU,cAAV,EAA0BtB,OAA1B;AACA,uBAAOG,QAAQ,CAACU,MAAT,CAAgB,QAAhB,EAA0Bb,OAA1B,CAAP;;AAEJ,mBAAK,EAAL;AACA,mBAAK,KAAL;AACI,uBAAOG,QAAQ,CAACoB,IAAT,EAAP;AA3DR;AA6DH;AACJ,SAhEM,EAgEJ9B,OAhEI,EAgEK,IAhEL,CAAP;AAiEH,OAnEwD,CAA9C,CAAX;;AAqEA,eAAS+B,UAAT,CAAoBC,EAApB,EAAwB;AACpB,eAAOlC,IAAI,CAACmC,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;AACH;;AAED,aAAOH,UAAP;AACH,KA3EM;AA4EP;AACR;AACA;;AAhFO,GAfkC,EAiGlC;AACC5C,IAAAA,GAAG,EAAE,eADN;AAECvB,IAAAA,KAAK,EAAE,SAASuE,aAAT,GAAyB;AAC5B,UAAIC,MAAM,GAAG,IAAb;;AAEA,WAAKhD,MAAL,GAAcI,IAAd,CAAmB,YAAY;AAC3B,YAAI6C,KAAK,GAAG,CAAC,GAAG9F,kBAAkB,CAACiB,OAAvB,GAAiC,aAAarB,aAAa,CAACqB,OAAd,CAAsBuC,IAAtB,CAA2B,SAASuC,QAAT,CAAkB3C,GAAlB,EAAuB;AACxG,cAAI4C,OAAJ,EAAaC,SAAb,EAAwBC,KAAxB;AACA,iBAAOtG,aAAa,CAACqB,OAAd,CAAsBgD,IAAtB,CAA2B,SAASkC,SAAT,CAAmBC,SAAnB,EAA8B;AAC5D,mBAAO,CAAP,EAAU;AACN,sBAAQA,SAAS,CAAChC,IAAV,GAAiBgC,SAAS,CAAC/B,IAAnC;AACI,qBAAK,CAAL;AACIjB,kBAAAA,GAAG,CAACiD,EAAJ,CAAO,WAAP,EAAoB,UAAUC,IAAV,EAAgB;AAChCvE,oBAAAA,GAAG,CAACwE,KAAJ,CAAU,gBAAgBD,IAAI,CAACE,IAAL,CAAU5D,GAApC;;AACAiD,oBAAAA,MAAM,CAACY,aAAP,CAAqB,MAArB,EAA6BH,IAAI,CAACE,IAAL,CAAU5D,GAAvC,EAA4C0D,IAAI,CAACE,IAAL,CAAUnF,KAAtD;AACH,mBAHD;AAIA+B,kBAAAA,GAAG,CAACiD,EAAJ,CAAO,aAAP,EAAsB,UAAUC,IAAV,EAAgB;AAClCvE,oBAAAA,GAAG,CAACwE,KAAJ,CAAU,kBAAkBD,IAAI,CAAC1D,GAAjC;AACA,wBAAIwC,GAAG,GAAGkB,IAAI,CAAC1D,GAAf;;AACA,wBAAI,CAACiD,MAAM,CAACpD,eAAZ,EAA6B;AACzBoD,sBAAAA,MAAM,CAACrD,WAAP,CAAmBkE,GAAnB,CAAuBtB,GAAvB;AACH;;AACD,wBAAIpB,OAAO,GAAG6B,MAAM,CAACtD,QAAP,CAAgBX,GAAhB,CAAoBwD,GAApB,CAAd;;AACA,wBAAIpB,OAAJ,EAAa;AACT,0BAAIA,OAAO,CAAC2C,MAAR,KAAmB,QAAnB,IAA+B3C,OAAO,CAAC2C,MAAR,KAAmB,SAAtD,EAAiE;AAC7D3C,wBAAAA,OAAO,CAAC4C,UAAR,CAAmB,kBAAnB,EAAuC,MAAvC;;AACAf,wBAAAA,MAAM,CAACP,IAAP,CAAY,aAAZ,EAA2BtB,OAA3B;AACH;;AACD,0BAAIA,OAAO,CAACU,SAAZ,EAAuB;AACnBmB,wBAAAA,MAAM,CAACtD,QAAP,CAAgBsE,MAAhB,CAAuBzB,GAAvB;;AACAS,wBAAAA,MAAM,CAACP,IAAP,CAAY,gBAAZ,EAA8BtB,OAA9B;;AACAA,wBAAAA,OAAO,CAACsB,IAAR,CAAa,SAAb,EAAwBtB,OAAxB;AACH;AACJ;AACJ,mBAlBD;AAmBAZ,kBAAAA,GAAG,CAACiD,EAAJ,CAAO,aAAP,EAAsB,UAAUC,IAAV,EAAgB;AAClCvE,oBAAAA,GAAG,CAACwE,KAAJ,CAAU,kBAAkBD,IAAI,CAACE,IAAL,CAAU5D,GAAtC;;AACAiD,oBAAAA,MAAM,CAACY,aAAP,CAAqB,MAArB,EAA6BH,IAAI,CAACE,IAAL,CAAU5D,GAAvC,EAA4C0D,IAAI,CAACE,IAAL,CAAUnF,KAAtD;AACH,mBAHD;AAIA2E,kBAAAA,OAAO,GAAG,EAAV;AACAI,kBAAAA,SAAS,CAAC/B,IAAV,GAAiB,CAAjB;AACA,yBAAOwB,MAAM,CAAC1D,QAAP,CAAgB2E,QAAhB,CAAyBC,OAAzB,EAAP;;AAEJ,qBAAK,CAAL;AACId,kBAAAA,SAAS,GAAGG,SAAS,CAACzB,IAAtB;AACAuB,kBAAAA,KAAK,GAAGD,SAAS,CAACC,KAAlB;AAEAA,kBAAAA,KAAK,CAACc,OAAN,CAAc,UAAUR,IAAV,EAAgB;AAC1BR,oBAAAA,OAAO,CAACiB,IAAR,CAAapB,MAAM,CAACY,aAAP,CAAqB,UAArB,EAAiCD,IAAI,CAACU,WAAtC,EAAmDV,IAAnD,CAAb;AACH,mBAFD;;AAIJ,qBAAK,CAAL;AACI,sBAAI,CAACP,SAAS,CAACkB,WAAf,EAA4B;AACxBf,oBAAAA,SAAS,CAAC/B,IAAV,GAAiB,EAAjB;AACA;AACH;;AAED+B,kBAAAA,SAAS,CAAC/B,IAAV,GAAiB,EAAjB;AACA,yBAAO4B,SAAS,CAACmB,QAAV,EAAP;;AAEJ,qBAAK,EAAL;AACInB,kBAAAA,SAAS,GAAGG,SAAS,CAACzB,IAAtB;AAEAsB,kBAAAA,SAAS,CAACC,KAAV,CAAgBc,OAAhB,CAAwB,UAAUR,IAAV,EAAgB;AACpCR,oBAAAA,OAAO,CAACiB,IAAR,CAAapB,MAAM,CAACY,aAAP,CAAqB,UAArB,EAAiCD,IAAI,CAACU,WAAtC,EAAmDV,IAAnD,CAAb;AACH,mBAFD;AAGAJ,kBAAAA,SAAS,CAAC/B,IAAV,GAAiB,CAAjB;AACA;;AAEJ,qBAAK,EAAL;AACIwB,kBAAAA,MAAM,CAACnD,YAAP,CAAoByC,GAApB,CAAwB,IAAxB;;AACA,yBAAOiB,SAAS,CAACvB,MAAV,CAAiB,QAAjB,EAA2BpF,SAAS,CAACwB,OAAV,CAAkBoG,GAAlB,CAAsBrB,OAAtB,CAA3B,CAAP;;AAEJ,qBAAK,EAAL;AACA,qBAAK,KAAL;AACI,yBAAOI,SAAS,CAACb,IAAV,EAAP;AAjER;AAmEH;AACJ,WAtEM,EAsEJQ,QAtEI,EAsEMF,MAtEN,CAAP;AAuEH,SAzEyD,CAA9C,CAAZ;;AA2EA,eAAO,UAAUyB,GAAV,EAAe;AAClB,iBAAOxB,KAAK,CAACJ,KAAN,CAAY,IAAZ,EAAkBC,SAAlB,CAAP;AACH,SAFD;AAGH,OA/EkB,EAAnB,EA+EK1C,IA/EL,CA+EU,YAAY;AAClB4C,QAAAA,MAAM,CAACpD,eAAP,GAAyB,IAAzB;;AACAoD,QAAAA,MAAM,CAACrD,WAAP,CAAmB+E,KAAnB;;AACAxF,QAAAA,GAAG,CAACwE,KAAJ,CAAU,uBAAV;AACH,OAnFD,EAmFGtD,IAnFH,CAmFQ,YAAY;AAChB,eAAO4C,MAAP;AACH,OArFD,EAqFG2B,KArFH,CAqFS,UAAUC,CAAV,EAAa;AAClB,YAAI5B,MAAM,CAAC1D,QAAP,CAAgBgB,UAAhB,CAA2BuE,eAA3B,IAA8C,cAAlD,EAAkE;AAC9D3F,UAAAA,GAAG,CAAC4F,KAAJ,CAAU,6BAAV,EAAyCF,CAAzC;AACH;;AACD1F,QAAAA,GAAG,CAACwE,KAAJ,CAAU,oCAAV,EAAgDkB,CAAhD;AACA,cAAMA,CAAN;AACH,OA3FD;AA4FH;AAjGF,GAjGkC,EAmMlC;AACC7E,IAAAA,GAAG,EAAE,gBADN;AAECvB,IAAAA,KAAK,EAAE,SAASuG,cAAT,CAAwBC,IAAxB,EAA8BC,EAA9B,EAAkC;AACrC,UAAIC,MAAM,GAAG,IAAb;;AAEA,aAAOD,EAAE,CAACD,IAAI,CAAC3B,KAAN,CAAF,CAAejD,IAAf,CAAoB,UAAUiD,KAAV,EAAiB;AACxC,eAAO;AACHA,UAAAA,KAAK,EAAEA,KADJ;AAEHiB,UAAAA,WAAW,EAAEU,IAAI,CAACV,WAFf;AAGHa,UAAAA,WAAW,EAAEH,IAAI,CAACG,WAHf;AAIHZ,UAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC1B,mBAAOS,IAAI,CAACT,QAAL,GAAgBnE,IAAhB,CAAqB,UAAUgF,CAAV,EAAa;AACrC,qBAAOF,MAAM,CAACH,cAAP,CAAsBK,CAAtB,EAAyBH,EAAzB,CAAP;AACH,aAFM,CAAP;AAGH,WARE;AASHI,UAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC1B,mBAAOL,IAAI,CAACK,QAAL,GAAgBjF,IAAhB,CAAqB,UAAUgF,CAAV,EAAa;AACrC,qBAAOF,MAAM,CAACH,cAAP,CAAsBK,CAAtB,EAAyBH,EAAzB,CAAP;AACH,aAFM,CAAP;AAGH;AAbE,SAAP;AAeH,OAhBM,CAAP;AAiBH;AAtBF,GAnMkC,EA0NlC;AACClF,IAAAA,GAAG,EAAE,aADN;AAECvB,IAAAA,KAAK,EAAE,SAAS8G,WAAT,CAAqB7B,IAArB,EAA2B;AAC9B,UAAI8B,MAAM,GAAG,IAAb;;AAEA,aAAO,KAAKvF,MAAL,GAAcI,IAAd,CAAmB,UAAUoF,WAAV,EAAuB;AAC7C,eAAOA,WAAW,CAACC,QAAZ,CAAqBhC,IAArB,CAAP;AACH,OAFM,EAEJrD,IAFI,CAEC,UAAU4E,IAAV,EAAgB;AACpB,eAAOO,MAAM,CAACR,cAAP,CAAsBC,IAAtB,EAA4B,UAAU3B,KAAV,EAAiB;AAChD,iBAAOzG,SAAS,CAACwB,OAAV,CAAkBoG,GAAlB,CAAsBnB,KAAK,CAAC9C,GAAN,CAAU,UAAUoD,IAAV,EAAgB;AACnD,mBAAO4B,MAAM,CAAC3B,aAAP,CAAqB,MAArB,EAA6BD,IAAI,CAAC5D,GAAlC,EAAuC4D,IAAI,CAACnF,KAA5C,CAAP;AACH,WAF4B,CAAtB,CAAP;AAGH,SAJM,CAAP;AAKH,OARM,CAAP;AASH;AAdF,GA1NkC,EAyOlC;AACCuB,IAAAA,GAAG,EAAE,YADN;AAECvB,IAAAA,KAAK,EAAE,SAASkH,UAAT,CAAoBnD,GAApB,EAAyB;AAC5B,UAAIoD,MAAM,GAAG,IAAb;;AAEA,aAAO,KAAK3F,MAAL,GAAcI,IAAd,CAAmB,UAAUoF,WAAV,EAAuB;AAC7C,eAAOA,WAAW,CAACC,QAAZ,CAAqB;AAAE1F,UAAAA,GAAG,EAAEwC;AAAP,SAArB,CAAP;AACH,OAFM,EAEJnC,IAFI,CAEC,UAAU4E,IAAV,EAAgB;AACpB,eAAOA,IAAI,CAAC3B,KAAL,CAAW9C,GAAX,CAAe,UAAUoD,IAAV,EAAgB;AAClC,iBAAOgC,MAAM,CAAC/B,aAAP,CAAqB,MAArB,EAA6BD,IAAI,CAAC5D,GAAlC,EAAuC4D,IAAI,CAACnF,KAA5C,CAAP;AACH,SAFM,CAAP;AAGH,OANM,EAMJ4B,IANI,CAMC,UAAUiD,KAAV,EAAiB;AACrB,eAAOA,KAAK,CAACuC,MAAN,GAAe,CAAf,GAAmBvC,KAAK,CAAC,CAAD,CAAxB,GAA8B,IAArC;AACH,OARM,CAAP;AASH;AAdF,GAzOkC,EAwPlC;AACCtD,IAAAA,GAAG,EAAE,aADN;AAECvB,IAAAA,KAAK,EAAE,SAASqH,WAAT,CAAqBC,UAArB,EAAiC;AACpC,UAAIvD,GAAG,GAAGuD,UAAU,CAACvD,GAArB;AACA,UAAIwD,IAAI,GAAG;AACP9D,QAAAA,UAAU,EAAE,IADL;AAEPE,QAAAA,wBAAwB,EAAE2D,UAAU,CAAC3D,wBAF9B;AAGPP,QAAAA,IAAI,EAAEkE,UAAU,CAAClE,IAHV;AAIPkC,QAAAA,MAAM,EAAEgC,UAAU,CAAChC,MAJZ;AAKPpC,QAAAA,YAAY,EAAEoE,UAAU,CAACpE,YALlB;AAMPW,QAAAA,WAAW,EAAEyD,UAAU,CAACzD,WANjB;AAOPD,QAAAA,WAAW,EAAE0D,UAAU,CAAC1D,WAPjB;AAQPT,QAAAA,UAAU,EAAEmE,UAAU,CAACnE,UARhB;AASPO,QAAAA,SAAS,EAAE4D,UAAU,CAAC5D,SATf;AAUPpB,QAAAA,UAAU,EAAEgF,UAAU,CAAChF,UAVhB;AAWPK,QAAAA,OAAO,EAAE2E,UAAU,CAAC3E,OAXb;AAYP6E,QAAAA,iBAAiB,EAAEF,UAAU,CAACE,iBAZvB;AAaPzD,QAAAA,GAAG,EAAEA;AAbE,OAAX;AAeA,aAAO,KAAKqB,aAAL,CAAmB,MAAnB,EAA2BrB,GAA3B,EAAgCwD,IAAhC,CAAP;AACH;AApBF,GAxPkC,EA6QlC;AACChG,IAAAA,GAAG,EAAE,eADN;AAECvB,IAAAA,KAAK,EAAE,SAASoF,aAAT,CAAuBqC,MAAvB,EAA+B1D,GAA/B,EAAoCwD,IAApC,EAA0C;AAC7C,UAAIG,MAAM,GAAG,IAAb;;AAEAhH,MAAAA,GAAG,CAACiH,KAAJ,CAAU,uBAAuB5D,GAAvB,GAA6B,SAAvC,EAAkDwD,IAAlD;AACA,UAAI5E,OAAO,GAAG,KAAKzB,QAAL,CAAcX,GAAd,CAAkBwD,GAAlB,CAAd,CAJ6C,CAK7C;;AACA,UAAIpB,OAAJ,EAAa;AACTjC,QAAAA,GAAG,CAACiH,KAAJ,CAAU,4BAA4B5D,GAA5B,GAAkC,qBAAlC,GAA0D,+BAA1D,GAA4FpB,OAAO,CAACiF,aAAR,EAA5F,GAAsH,+BAAtH,GAAwJH,MAAlK,EAA0K9E,OAA1K;;AACA,YAAI,OAAOA,OAAO,CAACiF,aAAR,EAAP,KAAmC,WAAnC,IAAkDH,MAAM,KAAK9E,OAAO,CAACiF,aAAR,EAA7D,IAAwFH,MAAM,KAAK,UAAX,IAAyB9E,OAAO,CAACiF,aAAR,OAA4B,MAA7I,IAAuJH,MAAM,KAAK,MAAtK,EAA8K;AAC1K,cAAIF,IAAI,CAACjC,MAAL,KAAgB,QAAhB,IAA4B3C,OAAO,CAAC2C,MAAR,KAAmB,QAAnD,EAA6D;AACzD3C,YAAAA,OAAO,CAAC4C,UAAR,CAAmB,QAAnB,EAA6BkC,MAA7B;;AACA,gBAAII,UAAU,GAAG,EAAjB;;AACA,gBAAI,OAAON,IAAI,CAACC,iBAAZ,KAAkC,WAAtC,EAAmD;AAC/CK,cAAAA,UAAU,CAACL,iBAAX,GAA+BD,IAAI,CAACC,iBAApC;AACH;;AACD,gBAAI,OAAOD,IAAI,CAAC5D,wBAAZ,KAAyC,WAA7C,EAA0D;AACtDkE,cAAAA,UAAU,CAAClE,wBAAX,GAAsC4D,IAAI,CAAC5D,wBAA3C;AACH;;AACD,gBAAI,CAAClD,MAAM,CAACqH,WAAP,CAAmBD,UAAnB,EAA+B,EAA/B,CAAL,EAAyC;AACrClF,cAAAA,OAAO,CAACoF,OAAR,CAAgBF,UAAhB;AACH;;AACDlF,YAAAA,OAAO,CAACY,UAAR,GAAqB3B,IAArB,CAA0B,YAAY;AAClC8F,cAAAA,MAAM,CAACzD,IAAP,CAAY,eAAZ,EAA6BtB,OAA7B;AACH,aAFD;AAGH,WAfD,MAeO,IAAI4E,IAAI,CAACjC,MAAL,KAAgB,SAAhB,IAA6B3C,OAAO,CAAC2C,MAAR,KAAmB,SAApD,EAA+D;AAClE3C,YAAAA,OAAO,CAAC4C,UAAR,CAAmB,SAAnB,EAA8BkC,MAA9B;;AACA,gBAAIO,WAAW,GAAG,EAAlB;;AACA,gBAAI,OAAOT,IAAI,CAACC,iBAAZ,KAAkC,WAAtC,EAAmD;AAC/CQ,cAAAA,WAAW,CAACR,iBAAZ,GAAgCD,IAAI,CAACC,iBAArC;AACH;;AACD,gBAAI,OAAOD,IAAI,CAAC5D,wBAAZ,KAAyC,WAA7C,EAA0D;AACtDqE,cAAAA,WAAW,CAACrE,wBAAZ,GAAuC4D,IAAI,CAAC5D,wBAA5C;AACH;;AACD,gBAAI,CAAClD,MAAM,CAACqH,WAAP,CAAmBE,WAAnB,EAAgC,EAAhC,CAAL,EAA0C;AACtCrF,cAAAA,OAAO,CAACoF,OAAR,CAAgBC,WAAhB;AACH;;AACDrF,YAAAA,OAAO,CAACY,UAAR,GAAqB3B,IAArB,CAA0B,YAAY;AAClC8F,cAAAA,MAAM,CAACzD,IAAP,CAAY,gBAAZ,EAA8BtB,OAA9B;AACH,aAFD;AAGH,WAfM,MAeA,IAAI4E,IAAI,CAACjC,MAAL,KAAgB,kBAAhB,KAAuC3C,OAAO,CAAC2C,MAAR,KAAmB,SAAnB,IAAgC3C,OAAO,CAAC2C,MAAR,KAAmB,QAA1F,CAAJ,EAAyG;AAC5G3C,YAAAA,OAAO,CAAC4C,UAAR,CAAmB,kBAAnB,EAAuCkC,MAAvC;;AACA9E,YAAAA,OAAO,CAACoF,OAAR,CAAgBR,IAAhB;;AACA5E,YAAAA,OAAO,CAACY,UAAR,GAAqB3B,IAArB,CAA0B,YAAY;AAClC8F,cAAAA,MAAM,CAACzD,IAAP,CAAY,aAAZ,EAA2BtB,OAA3B;AACH,aAFD;AAGH,WANM,MAMA,IAAI4E,IAAI,CAACjC,MAAL,KAAgB,kBAAhB,IAAsCiC,IAAI,CAACnE,IAAL,KAAc,SAAxD,EAAmE;AACtET,YAAAA,OAAO,CAACY,UAAR;AACH,WAFM,MAEA;AACHZ,YAAAA,OAAO,CAACoF,OAAR,CAAgBR,IAAhB;AACH;AACJ,SA1CD,MA0CO;AACH7G,UAAAA,GAAG,CAACiH,KAAJ,CAAU,wEAAV,EAAoF;AAChF5D,YAAAA,GAAG,EAAEA,GAD2E;AAEhFwD,YAAAA,IAAI,EAAEA,IAAI,CAACjC,MAFqE;AAGhF3C,YAAAA,OAAO,EAAEA,OAAO,CAAC2C;AAH+D,WAApF;AAKH;;AACD,eAAO3C,OAAO,CAACY,UAAR,GAAqB3B,IAArB,CAA0B,YAAY;AACzC,iBAAOe,OAAP;AACH,SAFM,CAAP;AAGH;;AACD,UAAI,CAAC8E,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,UAAjC,KAAgD,KAAKtG,WAAL,CAAiB8G,GAAjB,CAAqBlE,GAArB,CAApD,EAA+E;AAC3E;AACArD,QAAAA,GAAG,CAACiH,KAAJ,CAAU,sEAAV,EAAkF5D,GAAlF;AACA;AACH,OAjE4C,CAkE7C;;;AACArD,MAAAA,GAAG,CAACiH,KAAJ,CAAU,2DAA2D5D,GAArE,EAA0EwD,IAA1E;AACA5E,MAAAA,OAAO,GAAG,IAAItC,SAAS,CAACH,OAAd,CAAsB,KAAKY,QAA3B,EAAqCyG,IAArC,EAA2CxD,GAA3C,CAAV;AACA,WAAK7C,QAAL,CAAc4C,GAAd,CAAkBC,GAAlB,EAAuBpB,OAAvB;AACA,aAAOA,OAAO,CAACY,UAAR,GAAqB3B,IAArB,CAA0B,YAAY;AACzC8F,QAAAA,MAAM,CAAC1D,iBAAP,CAAyBrB,OAAzB;;AACA+E,QAAAA,MAAM,CAACzD,IAAP,CAAY,cAAZ,EAA4BtB,OAA5B;;AACA,YAAI4E,IAAI,CAACjC,MAAL,KAAgB,QAApB,EAA8B;AAC1B3C,UAAAA,OAAO,CAAC4C,UAAR,CAAmB,QAAnB,EAA6BkC,MAA7B;;AACAC,UAAAA,MAAM,CAACzD,IAAP,CAAY,eAAZ,EAA6BtB,OAA7B;AACH,SAHD,MAGO,IAAI4E,IAAI,CAACjC,MAAL,KAAgB,SAApB,EAA+B;AAClC3C,UAAAA,OAAO,CAAC4C,UAAR,CAAmB,SAAnB,EAA8BkC,MAA9B;;AACAC,UAAAA,MAAM,CAACzD,IAAP,CAAY,gBAAZ,EAA8BtB,OAA9B;AACH;;AACD,eAAOA,OAAP;AACH,OAXM,CAAP;AAYH;AApFF,GA7QkC,EAkWlC;AACCpB,IAAAA,GAAG,EAAE,kBADN;AAECvB,IAAAA,KAAK,EAAE,SAASkI,gBAAT,CAA0BnE,GAA1B,EAA+B;AAClC,UAAIpB,OAAO,GAAG,KAAKzB,QAAL,CAAcX,GAAd,CAAkBwD,GAAlB,CAAd;;AACA,UAAIpB,OAAJ,EAAa;AACT,aAAKzB,QAAL,CAAcsE,MAAd,CAAqBzB,GAArB;AACA,aAAKE,IAAL,CAAU,gBAAV,EAA4BtB,OAA5B;AACH;AACJ;AARF,GAlWkC,EA2WlC;AACCpB,IAAAA,GAAG,EAAE,mBADN;AAECvB,IAAAA,KAAK,EAAE,SAASgE,iBAAT,CAA2BrB,OAA3B,EAAoC;AACvC,UAAIwF,MAAM,GAAG,IAAb;;AAEAxF,MAAAA,OAAO,CAACqC,EAAR,CAAW,SAAX,EAAsB,YAAY;AAC9B,eAAOmD,MAAM,CAACD,gBAAP,CAAwBvF,OAAO,CAACoB,GAAhC,CAAP;AACH,OAFD;AAGApB,MAAAA,OAAO,CAACqC,EAAR,CAAW,SAAX,EAAsB,UAAUC,IAAV,EAAgB;AAClC,eAAOkD,MAAM,CAAClE,IAAP,CAAY,gBAAZ,EAA8BgB,IAA9B,CAAP;AACH,OAFD;AAGAtC,MAAAA,OAAO,CAACqC,EAAR,CAAW,cAAX,EAA2B,KAAKf,IAAL,CAAUmE,IAAV,CAAe,IAAf,EAAqB,cAArB,CAA3B;AACAzF,MAAAA,OAAO,CAACqC,EAAR,CAAW,YAAX,EAAyB,KAAKf,IAAL,CAAUmE,IAAV,CAAe,IAAf,EAAqB,YAArB,CAAzB;AACAzF,MAAAA,OAAO,CAACqC,EAAR,CAAW,eAAX,EAA4B,UAAUC,IAAV,EAAgB;AACxC,eAAOkD,MAAM,CAAClE,IAAP,CAAY,eAAZ,EAA6BgB,IAA7B,CAAP;AACH,OAFD;AAGAtC,MAAAA,OAAO,CAACqC,EAAR,CAAW,cAAX,EAA2B,KAAKf,IAAL,CAAUmE,IAAV,CAAe,IAAf,EAAqB,cAArB,CAA3B;AACAzF,MAAAA,OAAO,CAACqC,EAAR,CAAW,gBAAX,EAA6B,UAAUC,IAAV,EAAgB;AACzC,eAAOkD,MAAM,CAAClE,IAAP,CAAY,gBAAZ,EAA8BgB,IAA9B,CAAP;AACH,OAFD;AAGAtC,MAAAA,OAAO,CAACqC,EAAR,CAAW,gBAAX,EAA6B,KAAKf,IAAL,CAAUmE,IAAV,CAAe,IAAf,EAAqB,gBAArB,CAA7B;AACAzF,MAAAA,OAAO,CAACqC,EAAR,CAAW,eAAX,EAA4B,KAAKf,IAAL,CAAUmE,IAAV,CAAe,IAAf,EAAqB,eAArB,CAA5B;AACAzF,MAAAA,OAAO,CAACqC,EAAR,CAAW,aAAX,EAA0B,KAAKf,IAAL,CAAUmE,IAAV,CAAe,IAAf,EAAqB,aAArB,CAA1B;AACH;AAvBF,GA3WkC,CAArC;AAoYA,SAAOnI,QAAP;AACH,CArZc,CAqZbE,QAAQ,CAACkI,YArZI,CAAf;;AAuZAtI,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _set = require(\"babel-runtime/core-js/set\");\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _map = require(\"babel-runtime/core-js/map\");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Channels = exports.Channel = void 0;\nvar events_1 = require(\"events\");\nvar logger_1 = require(\"../logger\");\nvar channel_1 = require(\"../channel\");\nObject.defineProperty(exports, \"Channel\", { enumerable: true, get: function get() {\n        return channel_1.Channel;\n    } });\nvar deferred_1 = require(\"../util/deferred\");\nvar util_1 = require(\"../util\");\nvar log = logger_1.Logger.scope('Channels');\n/**\n * Represents channels collection\n * {@see Channel}\n */\n\nvar Channels = function (_events_1$EventEmitte) {\n    (0, _inherits3.default)(Channels, _events_1$EventEmitte);\n\n    function Channels(services) {\n        (0, _classCallCheck3.default)(this, Channels);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Channels.__proto__ || (0, _getPrototypeOf2.default)(Channels)).call(this));\n\n        _this.services = services;\n        _this.channels = new _map2.default();\n        _this.thumbstones = new _set2.default();\n        _this.syncListFetched = false;\n        _this.syncListRead = new deferred_1.Deferred();\n        return _this;\n    }\n\n    (0, _createClass3.default)(Channels, [{\n        key: \"getMap\",\n        value: function getMap() {\n            var _this2 = this;\n\n            return this.services.session.getMyChannelsId().then(function (name) {\n                return _this2.services.syncClient.map({ id: name, mode: 'open_existing' });\n            });\n        }\n        /**\n         * Add channel to server\n         * @private\n         * @returns {Promise<Channel>} Channel\n         */\n\n    }, {\n        key: \"addChannel\",\n        value: function () {\n            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n                var attributes, response, channelSid, channelDocument, existingChannel, channel;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                attributes = void 0;\n\n                                if (typeof options.attributes === 'undefined') {\n                                    attributes = {};\n                                } else {\n                                    attributes = options.attributes;\n                                }\n                                _context.next = 4;\n                                return this.services.session.addCommand('createChannel', {\n                                    friendlyName: options.friendlyName,\n                                    uniqueName: options.uniqueName,\n                                    type: options.isPrivate ? 'private' : 'public',\n                                    attributes: (0, _stringify2.default)(attributes)\n                                });\n\n                            case 4:\n                                response = _context.sent;\n                                channelSid = 'channelSid' in response ? response['channelSid'] : null;\n                                channelDocument = 'channel' in response ? response['channel'] : null;\n                                existingChannel = this.channels.get(channelSid);\n\n                                if (!existingChannel) {\n                                    _context.next = 12;\n                                    break;\n                                }\n\n                                _context.next = 11;\n                                return existingChannel._subscribe();\n\n                            case 11:\n                                return _context.abrupt(\"return\", existingChannel);\n\n                            case 12:\n                                channel = new channel_1.Channel(this.services, {\n                                    channel: channelDocument,\n                                    entityName: null,\n                                    uniqueName: null,\n                                    attributes: null,\n                                    createdBy: null,\n                                    friendlyName: null,\n                                    lastConsumedMessageIndex: null,\n                                    type: options.isPrivate ? 'private' : 'public',\n                                    dateCreated: null,\n                                    dateUpdated: null\n                                }, channelSid);\n\n                                this.channels.set(channel.sid, channel);\n                                this.registerForEvents(channel);\n                                _context.next = 17;\n                                return channel._subscribe();\n\n                            case 17:\n                                this.emit('channelAdded', channel);\n                                return _context.abrupt(\"return\", channel);\n\n                            case 19:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n\n            function addChannel(_x) {\n                return _ref.apply(this, arguments);\n            }\n\n            return addChannel;\n        }()\n        /**\n         * Fetch channels list and instantiate all necessary objects\n         */\n\n    }, {\n        key: \"fetchChannels\",\n        value: function fetchChannels() {\n            var _this3 = this;\n\n            this.getMap().then(function () {\n                var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(map) {\n                    var upserts, paginator, items;\n                    return _regenerator2.default.wrap(function _callee2$(_context2) {\n                        while (1) {\n                            switch (_context2.prev = _context2.next) {\n                                case 0:\n                                    map.on('itemAdded', function (args) {\n                                        log.debug('itemAdded: ' + args.item.key);\n                                        _this3.upsertChannel('sync', args.item.key, args.item.value);\n                                    });\n                                    map.on('itemRemoved', function (args) {\n                                        log.debug('itemRemoved: ' + args.key);\n                                        var sid = args.key;\n                                        if (!_this3.syncListFetched) {\n                                            _this3.thumbstones.add(sid);\n                                        }\n                                        var channel = _this3.channels.get(sid);\n                                        if (channel) {\n                                            if (channel.status === 'joined' || channel.status === 'invited') {\n                                                channel._setStatus('notParticipating', 'sync');\n                                                _this3.emit('channelLeft', channel);\n                                            }\n                                            if (channel.isPrivate) {\n                                                _this3.channels.delete(sid);\n                                                _this3.emit('channelRemoved', channel);\n                                                channel.emit('removed', channel);\n                                            }\n                                        }\n                                    });\n                                    map.on('itemUpdated', function (args) {\n                                        log.debug('itemUpdated: ' + args.item.key);\n                                        _this3.upsertChannel('sync', args.item.key, args.item.value);\n                                    });\n                                    upserts = [];\n                                    _context2.next = 6;\n                                    return _this3.services.syncList.getPage();\n\n                                case 6:\n                                    paginator = _context2.sent;\n                                    items = paginator.items;\n\n                                    items.forEach(function (item) {\n                                        upserts.push(_this3.upsertChannel('synclist', item.channel_sid, item));\n                                    });\n\n                                case 9:\n                                    if (!paginator.hasNextPage) {\n                                        _context2.next = 16;\n                                        break;\n                                    }\n\n                                    _context2.next = 12;\n                                    return paginator.nextPage();\n\n                                case 12:\n                                    paginator = _context2.sent;\n\n                                    paginator.items.forEach(function (item) {\n                                        upserts.push(_this3.upsertChannel('synclist', item.channel_sid, item));\n                                    });\n                                    _context2.next = 9;\n                                    break;\n\n                                case 16:\n                                    _this3.syncListRead.set(true);\n                                    return _context2.abrupt(\"return\", _promise2.default.all(upserts));\n\n                                case 18:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2, _this3);\n                }));\n\n                return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                };\n            }()).then(function () {\n                _this3.syncListFetched = true;\n                _this3.thumbstones.clear();\n                log.debug('Channels list fetched');\n            }).then(function () {\n                return _this3;\n            }).catch(function (e) {\n                if (_this3.services.syncClient.connectionState != 'disconnected') {\n                    log.error('Failed to get channels list', e);\n                }\n                log.debug('ERROR: Failed to get channels list', e);\n                throw e;\n            });\n        }\n    }, {\n        key: \"_wrapPaginator\",\n        value: function _wrapPaginator(page, op) {\n            var _this4 = this;\n\n            return op(page.items).then(function (items) {\n                return {\n                    items: items,\n                    hasNextPage: page.hasNextPage,\n                    hasPrevPage: page.hasPrevPage,\n                    nextPage: function nextPage() {\n                        return page.nextPage().then(function (x) {\n                            return _this4._wrapPaginator(x, op);\n                        });\n                    },\n                    prevPage: function prevPage() {\n                        return page.prevPage().then(function (x) {\n                            return _this4._wrapPaginator(x, op);\n                        });\n                    }\n                };\n            });\n        }\n    }, {\n        key: \"getChannels\",\n        value: function getChannels(args) {\n            var _this5 = this;\n\n            return this.getMap().then(function (channelsMap) {\n                return channelsMap.getItems(args);\n            }).then(function (page) {\n                return _this5._wrapPaginator(page, function (items) {\n                    return _promise2.default.all(items.map(function (item) {\n                        return _this5.upsertChannel('sync', item.key, item.value);\n                    }));\n                });\n            });\n        }\n    }, {\n        key: \"getChannel\",\n        value: function getChannel(sid) {\n            var _this6 = this;\n\n            return this.getMap().then(function (channelsMap) {\n                return channelsMap.getItems({ key: sid });\n            }).then(function (page) {\n                return page.items.map(function (item) {\n                    return _this6.upsertChannel('sync', item.key, item.value);\n                });\n            }).then(function (items) {\n                return items.length > 0 ? items[0] : null;\n            });\n        }\n    }, {\n        key: \"pushChannel\",\n        value: function pushChannel(descriptor) {\n            var sid = descriptor.sid;\n            var data = {\n                entityName: null,\n                lastConsumedMessageIndex: descriptor.lastConsumedMessageIndex,\n                type: descriptor.type,\n                status: descriptor.status,\n                friendlyName: descriptor.friendlyName,\n                dateUpdated: descriptor.dateUpdated,\n                dateCreated: descriptor.dateCreated,\n                uniqueName: descriptor.uniqueName,\n                createdBy: descriptor.createdBy,\n                attributes: descriptor.attributes,\n                channel: descriptor.channel,\n                notificationLevel: descriptor.notificationLevel,\n                sid: sid\n            };\n            return this.upsertChannel('chat', sid, data);\n        }\n    }, {\n        key: \"upsertChannel\",\n        value: function upsertChannel(source, sid, data) {\n            var _this7 = this;\n\n            log.trace('upsertChannel(sid=' + sid + ', data=', data);\n            var channel = this.channels.get(sid);\n            // Update the Channel's status if we know about it\n            if (channel) {\n                log.trace('upsertChannel: channel ' + sid + ' is known and it\\'s' + ' status is known from source ' + channel._statusSource() + ' and update came from source ' + source, channel);\n                if (typeof channel._statusSource() === 'undefined' || source === channel._statusSource() || source === 'synclist' && channel._statusSource() !== 'sync' || source === 'sync') {\n                    if (data.status === 'joined' && channel.status !== 'joined') {\n                        channel._setStatus('joined', source);\n                        var updateData = {};\n                        if (typeof data.notificationLevel !== 'undefined') {\n                            updateData.notificationLevel = data.notificationLevel;\n                        }\n                        if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n                            updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n                        }\n                        if (!util_1.isDeepEqual(updateData, {})) {\n                            channel._update(updateData);\n                        }\n                        channel._subscribe().then(function () {\n                            _this7.emit('channelJoined', channel);\n                        });\n                    } else if (data.status === 'invited' && channel.status !== 'invited') {\n                        channel._setStatus('invited', source);\n                        var _updateData = {};\n                        if (typeof data.notificationLevel !== 'undefined') {\n                            _updateData.notificationLevel = data.notificationLevel;\n                        }\n                        if (typeof data.lastConsumedMessageIndex !== 'undefined') {\n                            _updateData.lastConsumedMessageIndex = data.lastConsumedMessageIndex;\n                        }\n                        if (!util_1.isDeepEqual(_updateData, {})) {\n                            channel._update(_updateData);\n                        }\n                        channel._subscribe().then(function () {\n                            _this7.emit('channelInvited', channel);\n                        });\n                    } else if (data.status === 'notParticipating' && (channel.status === 'invited' || channel.status === 'joined')) {\n                        channel._setStatus('notParticipating', source);\n                        channel._update(data);\n                        channel._subscribe().then(function () {\n                            _this7.emit('channelLeft', channel);\n                        });\n                    } else if (data.status === 'notParticipating' && data.type === 'private') {\n                        channel._subscribe();\n                    } else {\n                        channel._update(data);\n                    }\n                } else {\n                    log.trace('upsertChannel: channel is known from sync and came from chat, ignoring', {\n                        sid: sid,\n                        data: data.status,\n                        channel: channel.status\n                    });\n                }\n                return channel._subscribe().then(function () {\n                    return channel;\n                });\n            }\n            if ((source === 'chat' || source === 'synclist') && this.thumbstones.has(sid)) {\n                // if channel was deleted, we ignore it\n                log.trace('upsertChannel: channel is deleted and came again from chat, ignoring', sid);\n                return;\n            }\n            // Fetch the Channel if we don't know about it\n            log.trace('upsertChannel: creating local channel object with sid ' + sid, data);\n            channel = new channel_1.Channel(this.services, data, sid);\n            this.channels.set(sid, channel);\n            return channel._subscribe().then(function () {\n                _this7.registerForEvents(channel);\n                _this7.emit('channelAdded', channel);\n                if (data.status === 'joined') {\n                    channel._setStatus('joined', source);\n                    _this7.emit('channelJoined', channel);\n                } else if (data.status === 'invited') {\n                    channel._setStatus('invited', source);\n                    _this7.emit('channelInvited', channel);\n                }\n                return channel;\n            });\n        }\n    }, {\n        key: \"onChannelRemoved\",\n        value: function onChannelRemoved(sid) {\n            var channel = this.channels.get(sid);\n            if (channel) {\n                this.channels.delete(sid);\n                this.emit('channelRemoved', channel);\n            }\n        }\n    }, {\n        key: \"registerForEvents\",\n        value: function registerForEvents(channel) {\n            var _this8 = this;\n\n            channel.on('removed', function () {\n                return _this8.onChannelRemoved(channel.sid);\n            });\n            channel.on('updated', function (args) {\n                return _this8.emit('channelUpdated', args);\n            });\n            channel.on('memberJoined', this.emit.bind(this, 'memberJoined'));\n            channel.on('memberLeft', this.emit.bind(this, 'memberLeft'));\n            channel.on('memberUpdated', function (args) {\n                return _this8.emit('memberUpdated', args);\n            });\n            channel.on('messageAdded', this.emit.bind(this, 'messageAdded'));\n            channel.on('messageUpdated', function (args) {\n                return _this8.emit('messageUpdated', args);\n            });\n            channel.on('messageRemoved', this.emit.bind(this, 'messageRemoved'));\n            channel.on('typingStarted', this.emit.bind(this, 'typingStarted'));\n            channel.on('typingEnded', this.emit.bind(this, 'typingEnded'));\n        }\n    }]);\n    return Channels;\n}(events_1.EventEmitter);\n\nexports.Channels = Channels;"]},"metadata":{},"sourceType":"script"}