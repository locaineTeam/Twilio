{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar AudioTrack = require('./audiotrack');\n\nvar mixinLocalMediaTrack = require('./localmediatrack');\n\nvar LocalMediaAudioTrack = mixinLocalMediaTrack(AudioTrack);\n/**\r\n * A {@link LocalAudioTrack} is an {@link AudioTrack} representing audio that\r\n * your {@link LocalParticipant} can publish to a {@link Room}. It can be\r\n * enabled and disabled with {@link LocalAudioTrack#enable} and\r\n * {@link LocalAudioTrack#disable} or stopped completely with\r\n * {@link LocalAudioTrack#stop}.\r\n * @extends AudioTrack\r\n * @property {Track.ID} id - The {@link LocalAudioTrack}'s ID\r\n * @property {boolean} isStopped - Whether or not the {@link LocalAudioTrack} is\r\n *   stopped\r\n * @emits LocalAudioTrack#disabled\r\n * @emits LocalAudioTrack#enabled\r\n * @emits LocalAudioTrack#started\r\n * @emits LocalAudioTrack#stopped\r\n */\n\nvar LocalAudioTrack = function (_LocalMediaAudioTrack) {\n  _inherits(LocalAudioTrack, _LocalMediaAudioTrack);\n  /**\r\n   * Construct a {@link LocalAudioTrack} from a MediaStreamTrack.\r\n   * @param {MediaStreamTrack} mediaStreamTrack - An audio MediaStreamTrack\r\n   * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\r\n   */\n\n\n  function LocalAudioTrack(mediaStreamTrack, options) {\n    _classCallCheck(this, LocalAudioTrack);\n\n    return _possibleConstructorReturn(this, (LocalAudioTrack.__proto__ || Object.getPrototypeOf(LocalAudioTrack)).call(this, mediaStreamTrack, options));\n  }\n\n  _createClass(LocalAudioTrack, [{\n    key: 'toString',\n    value: function toString() {\n      return '[LocalAudioTrack #' + this._instanceId + ': ' + this.id + ']';\n    }\n  }, {\n    key: 'attach',\n    value: function attach(el) {\n      el = _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'attach', this).call(this, el);\n      el.muted = true;\n      return el;\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: '_end',\n    value: function _end() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), '_end', this).apply(this, arguments);\n    }\n    /**\r\n     * Disable the {@link LocalAudioTrack}. This is effectively \"mute\".\r\n     * @returns {this}\r\n     * @fires LocalAudioTrack#disabled\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'disable', this).apply(this, arguments);\n    }\n    /**\r\n     * Enable the {@link LocalAudioTrack}. This is effectively \"unmute\".\r\n     * @returns {this}\r\n     * @fires LocalAudioTrack#enabled\r\n    */\n\n    /**\r\n    * Enable or disable the {@link LocalAudioTrack}. This is effectively \"unmute\"\r\n    * or \"mute\".\r\n    * @param {boolean} [enabled] - Specify false to mute the\r\n    *   {@link LocalAudioTrack}\r\n    * @returns {this}\r\n    * @fires LocalAudioTrack#disabled\r\n    * @fires LocalAudioTrack#enabled\r\n    */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'enable', this).apply(this, arguments);\n    }\n    /**\r\n     * Restart the {@link LocalAudioTrack}. This stops the existing MediaStreamTrack\r\n     * and creates a new MediaStreamTrack. If the {@link LocalAudioTrack} is being published\r\n     * to a {@link Room}, then all the {@link RemoteParticipant}s will start receiving media\r\n     * from the newly created MediaStreamTrack. You can access the new MediaStreamTrack via\r\n     * the <code>mediaStreamTrack</code> property. If you want to listen to events on\r\n     * the MediaStreamTrack directly, please do so in the \"started\" event handler. Also,\r\n     * the {@link LocalAudioTrack}'s ID is no longer guaranteed to be the same as the\r\n     * underlying MediaStreamTrack's ID.\r\n     * @param {MediaTrackConstraints} [constraints] - The optional <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\r\n     *   for restarting the {@link LocalAudioTrack}; If not specified, then the current MediaTrackConstraints\r\n     *   will be used; If <code>{}</code> (empty object) is specified, then the default MediaTrackConstraints\r\n     *   will be used\r\n     * @returns {Promise<void>} Rejects with a TypeError if the {@link LocalAudioTrack} was not created\r\n     *   using an one of <code>createLocalAudioTrack</code>, <code>createLocalTracks</code> or <code>connect</code>;\r\n     *   Also rejects with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Exceptions\" target=\"_blank\">DOMException</a>\r\n     *   raised by <code>getUserMedia</code> when it fails\r\n     * @fires LocalAudioTrack#stopped\r\n     * @fires LocalAudioTrack#started\r\n     * @example\r\n     * const { connect, createLocalAudioTrack } = require('twilio-video');\r\n     *\r\n     * // Create a LocalAudioTrack that captures audio from a USB microphone.\r\n     * createLocalAudioTrack({ deviceId: 'usb-mic-id' }).then(function(localAudioTrack) {\r\n     *   return connect('token', {\r\n     *     name: 'my-cool-room',\r\n     *     tracks: [localAudioTrack]\r\n     *   });\r\n     * }).then(function(room) {\r\n     *   // Restart the LocalAudioTrack to capture audio from the default microphone.\r\n     *   const localAudioTrack = Array.from(room.localParticipant.audioTracks.values())[0].track;\r\n     *   return localAudioTrack.restart({ deviceId: 'default-mic-id' });\r\n     * });\r\n     */\n\n  }, {\n    key: 'restart',\n    value: function restart() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'restart', this).apply(this, arguments);\n    }\n    /**\r\n     * Calls stop on the underlying MediaStreamTrack. If you choose to stop a\r\n     * {@link LocalAudioTrack}, you should unpublish it after stopping.\r\n     * @returns {this}\r\n     * @fires LocalAudioTrack#stopped\r\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'stop', this).apply(this, arguments);\n    }\n  }]);\n\n  return LocalAudioTrack;\n}(LocalMediaAudioTrack);\n/**\r\n * The {@link LocalAudioTrack} was disabled, i.e. \"muted\".\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that was\r\n *   disabled\r\n * @event LocalAudioTrack#disabled\r\n */\n\n/**\r\n * The {@link LocalAudioTrack} was enabled, i.e. \"unmuted\".\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that was enabled\r\n * @event LocalAudioTrack#enabled\r\n */\n\n/**\r\n * The {@link LocalAudioTrack} started. This means there is enough audio data to\r\n * begin playback.\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that started\r\n * @event LocalAudioTrack#started\r\n */\n\n/**\r\n * The {@link LocalAudioTrack} stopped, either because {@link LocalAudioTrack#stop}\r\n * or {@link LocalAudioTrack#restart} was called or because the underlying\r\n * MediaStreamTrack ended.\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that stopped\r\n * @event LocalAudioTrack#stopped\r\n */\n\n\nmodule.exports = LocalAudioTrack;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/node_modules/twilio-video/es5/media/track/localaudiotrack.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","AudioTrack","require","mixinLocalMediaTrack","LocalMediaAudioTrack","LocalAudioTrack","_LocalMediaAudioTrack","mediaStreamTrack","options","toString","_instanceId","id","attach","el","muted","_end","apply","arguments","disable","enable","restart","stop","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar AudioTrack = require('./audiotrack');\r\nvar mixinLocalMediaTrack = require('./localmediatrack');\r\n\r\nvar LocalMediaAudioTrack = mixinLocalMediaTrack(AudioTrack);\r\n\r\n/**\r\n * A {@link LocalAudioTrack} is an {@link AudioTrack} representing audio that\r\n * your {@link LocalParticipant} can publish to a {@link Room}. It can be\r\n * enabled and disabled with {@link LocalAudioTrack#enable} and\r\n * {@link LocalAudioTrack#disable} or stopped completely with\r\n * {@link LocalAudioTrack#stop}.\r\n * @extends AudioTrack\r\n * @property {Track.ID} id - The {@link LocalAudioTrack}'s ID\r\n * @property {boolean} isStopped - Whether or not the {@link LocalAudioTrack} is\r\n *   stopped\r\n * @emits LocalAudioTrack#disabled\r\n * @emits LocalAudioTrack#enabled\r\n * @emits LocalAudioTrack#started\r\n * @emits LocalAudioTrack#stopped\r\n */\r\n\r\nvar LocalAudioTrack = function (_LocalMediaAudioTrack) {\r\n  _inherits(LocalAudioTrack, _LocalMediaAudioTrack);\r\n\r\n  /**\r\n   * Construct a {@link LocalAudioTrack} from a MediaStreamTrack.\r\n   * @param {MediaStreamTrack} mediaStreamTrack - An audio MediaStreamTrack\r\n   * @param {LocalTrackOptions} [options] - {@link LocalTrack} options\r\n   */\r\n  function LocalAudioTrack(mediaStreamTrack, options) {\r\n    _classCallCheck(this, LocalAudioTrack);\r\n\r\n    return _possibleConstructorReturn(this, (LocalAudioTrack.__proto__ || Object.getPrototypeOf(LocalAudioTrack)).call(this, mediaStreamTrack, options));\r\n  }\r\n\r\n  _createClass(LocalAudioTrack, [{\r\n    key: 'toString',\r\n    value: function toString() {\r\n      return '[LocalAudioTrack #' + this._instanceId + ': ' + this.id + ']';\r\n    }\r\n  }, {\r\n    key: 'attach',\r\n    value: function attach(el) {\r\n      el = _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'attach', this).call(this, el);\r\n      el.muted = true;\r\n      return el;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n\r\n  }, {\r\n    key: '_end',\r\n    value: function _end() {\r\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), '_end', this).apply(this, arguments);\r\n    }\r\n\r\n    /**\r\n     * Disable the {@link LocalAudioTrack}. This is effectively \"mute\".\r\n     * @returns {this}\r\n     * @fires LocalAudioTrack#disabled\r\n     */\r\n\r\n  }, {\r\n    key: 'disable',\r\n    value: function disable() {\r\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'disable', this).apply(this, arguments);\r\n    }\r\n\r\n    /**\r\n     * Enable the {@link LocalAudioTrack}. This is effectively \"unmute\".\r\n     * @returns {this}\r\n     * @fires LocalAudioTrack#enabled\r\n    */ /**\r\n       * Enable or disable the {@link LocalAudioTrack}. This is effectively \"unmute\"\r\n       * or \"mute\".\r\n       * @param {boolean} [enabled] - Specify false to mute the\r\n       *   {@link LocalAudioTrack}\r\n       * @returns {this}\r\n       * @fires LocalAudioTrack#disabled\r\n       * @fires LocalAudioTrack#enabled\r\n       */\r\n\r\n  }, {\r\n    key: 'enable',\r\n    value: function enable() {\r\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'enable', this).apply(this, arguments);\r\n    }\r\n\r\n    /**\r\n     * Restart the {@link LocalAudioTrack}. This stops the existing MediaStreamTrack\r\n     * and creates a new MediaStreamTrack. If the {@link LocalAudioTrack} is being published\r\n     * to a {@link Room}, then all the {@link RemoteParticipant}s will start receiving media\r\n     * from the newly created MediaStreamTrack. You can access the new MediaStreamTrack via\r\n     * the <code>mediaStreamTrack</code> property. If you want to listen to events on\r\n     * the MediaStreamTrack directly, please do so in the \"started\" event handler. Also,\r\n     * the {@link LocalAudioTrack}'s ID is no longer guaranteed to be the same as the\r\n     * underlying MediaStreamTrack's ID.\r\n     * @param {MediaTrackConstraints} [constraints] - The optional <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\" target=\"_blank\">MediaTrackConstraints</a>\r\n     *   for restarting the {@link LocalAudioTrack}; If not specified, then the current MediaTrackConstraints\r\n     *   will be used; If <code>{}</code> (empty object) is specified, then the default MediaTrackConstraints\r\n     *   will be used\r\n     * @returns {Promise<void>} Rejects with a TypeError if the {@link LocalAudioTrack} was not created\r\n     *   using an one of <code>createLocalAudioTrack</code>, <code>createLocalTracks</code> or <code>connect</code>;\r\n     *   Also rejects with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Exceptions\" target=\"_blank\">DOMException</a>\r\n     *   raised by <code>getUserMedia</code> when it fails\r\n     * @fires LocalAudioTrack#stopped\r\n     * @fires LocalAudioTrack#started\r\n     * @example\r\n     * const { connect, createLocalAudioTrack } = require('twilio-video');\r\n     *\r\n     * // Create a LocalAudioTrack that captures audio from a USB microphone.\r\n     * createLocalAudioTrack({ deviceId: 'usb-mic-id' }).then(function(localAudioTrack) {\r\n     *   return connect('token', {\r\n     *     name: 'my-cool-room',\r\n     *     tracks: [localAudioTrack]\r\n     *   });\r\n     * }).then(function(room) {\r\n     *   // Restart the LocalAudioTrack to capture audio from the default microphone.\r\n     *   const localAudioTrack = Array.from(room.localParticipant.audioTracks.values())[0].track;\r\n     *   return localAudioTrack.restart({ deviceId: 'default-mic-id' });\r\n     * });\r\n     */\r\n\r\n  }, {\r\n    key: 'restart',\r\n    value: function restart() {\r\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'restart', this).apply(this, arguments);\r\n    }\r\n\r\n    /**\r\n     * Calls stop on the underlying MediaStreamTrack. If you choose to stop a\r\n     * {@link LocalAudioTrack}, you should unpublish it after stopping.\r\n     * @returns {this}\r\n     * @fires LocalAudioTrack#stopped\r\n     */\r\n\r\n  }, {\r\n    key: 'stop',\r\n    value: function stop() {\r\n      return _get(LocalAudioTrack.prototype.__proto__ || Object.getPrototypeOf(LocalAudioTrack.prototype), 'stop', this).apply(this, arguments);\r\n    }\r\n  }]);\r\n\r\n  return LocalAudioTrack;\r\n}(LocalMediaAudioTrack);\r\n\r\n/**\r\n * The {@link LocalAudioTrack} was disabled, i.e. \"muted\".\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that was\r\n *   disabled\r\n * @event LocalAudioTrack#disabled\r\n */\r\n\r\n/**\r\n * The {@link LocalAudioTrack} was enabled, i.e. \"unmuted\".\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that was enabled\r\n * @event LocalAudioTrack#enabled\r\n */\r\n\r\n/**\r\n * The {@link LocalAudioTrack} started. This means there is enough audio data to\r\n * begin playback.\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that started\r\n * @event LocalAudioTrack#started\r\n */\r\n\r\n/**\r\n * The {@link LocalAudioTrack} stopped, either because {@link LocalAudioTrack#stop}\r\n * or {@link LocalAudioTrack#restart} was called or because the underlying\r\n * MediaStreamTrack ended.\r\n * @param {LocalAudioTrack} track - The {@link LocalAudioTrack} that stopped\r\n * @event LocalAudioTrack#stopped\r\n */\r\n\r\nmodule.exports = LocalAudioTrack;"]},"metadata":{},"sourceType":"script"}