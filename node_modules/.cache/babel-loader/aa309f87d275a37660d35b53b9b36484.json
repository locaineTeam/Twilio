{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserDescriptor = void 0;\n\nvar logger_1 = require(\"./logger\");\n\nvar util_1 = require(\"./util\");\n\nvar log = logger_1.Logger.scope('UserDescriptor');\n/**\n * @classdesc Extended user information.\n * Note that <code>online</code> and <code>notifiable</code> properties are eligible\n * to use only if reachability function is enabled.\n * You may check if it is enabled by reading value of {@link Client}'s <code>reachabilityEnabled</code> property.\n *\n * @property {String} identity - User identity\n * @property {String} friendlyName - User friendly name, null if not set\n * @property {any} attributes - Object with custom attributes for user\n * @property {Boolean} online - User real-time channel connection status\n * @property {Boolean} notifiable - User push notification registration status\n *\n * @constructor\n * @param {Users} users Users instance\n * @param {Object} descriptor User descriptor data object\n */\n\nvar UserDescriptor = function () {\n  /**\n   * @param {UserDescriptorServices} services - services, needed for UserDescriptor\n   * @param {Object} descriptor User descriptor data object\n   * @private\n   */\n  function UserDescriptor(services, descriptor) {\n    (0, _classCallCheck3.default)(this, UserDescriptor);\n    this.services = services;\n    this.descriptor = descriptor;\n    this.identity = descriptor.identity;\n    this.friendlyName = descriptor.friendly_name;\n    this.attributes = util_1.parseAttributes(descriptor.attributes, 'Failed to parse user attributes', log);\n    this.online = descriptor.is_online;\n    this.notifiable = descriptor.is_notifiable;\n  }\n  /**\n   * Gets User object from descriptor and subscribes to it.\n   * @returns {Promise<User>}\n   */\n\n\n  (0, _createClass3.default)(UserDescriptor, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      return this.services.users.getUser(this.identity, this.descriptor.sync_unique_name);\n    }\n  }, {\n    key: \"_getDescriptor\",\n    value: function _getDescriptor() {\n      return this.descriptor;\n    }\n  }]);\n  return UserDescriptor;\n}();\n\nexports.UserDescriptor = UserDescriptor;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/node_modules/twilio-chat/browser/userdescriptor.js"],"names":["_classCallCheck2","require","_classCallCheck3","_interopRequireDefault","_createClass2","_createClass3","obj","__esModule","default","Object","defineProperty","exports","value","UserDescriptor","logger_1","util_1","log","Logger","scope","services","descriptor","identity","friendlyName","friendly_name","attributes","parseAttributes","online","is_online","notifiable","is_notifiable","key","subscribe","users","getUser","sync_unique_name","_getDescriptor"],"mappings":"AAAA;;AAEA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,sCAAD,CAA9B;;AAEA,IAAIC,gBAAgB,GAAGC,sBAAsB,CAACH,gBAAD,CAA7C;;AAEA,IAAII,aAAa,GAAGH,OAAO,CAAC,mCAAD,CAA3B;;AAEA,IAAII,aAAa,GAAGF,sBAAsB,CAACC,aAAD,CAA1C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/FG,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyB,KAAK,CAA9B;;AACA,IAAIC,QAAQ,GAAGb,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIc,MAAM,GAAGd,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIe,GAAG,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,KAAhB,CAAsB,gBAAtB,CAAV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIL,cAAc,GAAG,YAAY;AAC7B;AACJ;AACA;AACA;AACA;AACI,WAASA,cAAT,CAAwBM,QAAxB,EAAkCC,UAAlC,EAA8C;AAC1C,KAAC,GAAGlB,gBAAgB,CAACM,OAArB,EAA8B,IAA9B,EAAoCK,cAApC;AAEA,SAAKM,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBD,UAAU,CAACC,QAA3B;AACA,SAAKC,YAAL,GAAoBF,UAAU,CAACG,aAA/B;AACA,SAAKC,UAAL,GAAkBT,MAAM,CAACU,eAAP,CAAuBL,UAAU,CAACI,UAAlC,EAA8C,iCAA9C,EAAiFR,GAAjF,CAAlB;AACA,SAAKU,MAAL,GAAcN,UAAU,CAACO,SAAzB;AACA,SAAKC,UAAL,GAAkBR,UAAU,CAACS,aAA7B;AACH;AACD;AACJ;AACA;AACA;;;AAGI,GAAC,GAAGxB,aAAa,CAACG,OAAlB,EAA2BK,cAA3B,EAA2C,CAAC;AACxCiB,IAAAA,GAAG,EAAE,WADmC;AAExClB,IAAAA,KAAK,EAAE,SAASmB,SAAT,GAAqB;AACxB,aAAO,KAAKZ,QAAL,CAAca,KAAd,CAAoBC,OAApB,CAA4B,KAAKZ,QAAjC,EAA2C,KAAKD,UAAL,CAAgBc,gBAA3D,CAAP;AACH;AAJuC,GAAD,EAKxC;AACCJ,IAAAA,GAAG,EAAE,gBADN;AAEClB,IAAAA,KAAK,EAAE,SAASuB,cAAT,GAA0B;AAC7B,aAAO,KAAKf,UAAZ;AACH;AAJF,GALwC,CAA3C;AAWA,SAAOP,cAAP;AACH,CAnCoB,EAArB;;AAqCAF,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserDescriptor = void 0;\nvar logger_1 = require(\"./logger\");\nvar util_1 = require(\"./util\");\nvar log = logger_1.Logger.scope('UserDescriptor');\n/**\n * @classdesc Extended user information.\n * Note that <code>online</code> and <code>notifiable</code> properties are eligible\n * to use only if reachability function is enabled.\n * You may check if it is enabled by reading value of {@link Client}'s <code>reachabilityEnabled</code> property.\n *\n * @property {String} identity - User identity\n * @property {String} friendlyName - User friendly name, null if not set\n * @property {any} attributes - Object with custom attributes for user\n * @property {Boolean} online - User real-time channel connection status\n * @property {Boolean} notifiable - User push notification registration status\n *\n * @constructor\n * @param {Users} users Users instance\n * @param {Object} descriptor User descriptor data object\n */\n\nvar UserDescriptor = function () {\n    /**\n     * @param {UserDescriptorServices} services - services, needed for UserDescriptor\n     * @param {Object} descriptor User descriptor data object\n     * @private\n     */\n    function UserDescriptor(services, descriptor) {\n        (0, _classCallCheck3.default)(this, UserDescriptor);\n\n        this.services = services;\n        this.descriptor = descriptor;\n        this.identity = descriptor.identity;\n        this.friendlyName = descriptor.friendly_name;\n        this.attributes = util_1.parseAttributes(descriptor.attributes, 'Failed to parse user attributes', log);\n        this.online = descriptor.is_online;\n        this.notifiable = descriptor.is_notifiable;\n    }\n    /**\n     * Gets User object from descriptor and subscribes to it.\n     * @returns {Promise<User>}\n     */\n\n\n    (0, _createClass3.default)(UserDescriptor, [{\n        key: \"subscribe\",\n        value: function subscribe() {\n            return this.services.users.getUser(this.identity, this.descriptor.sync_unique_name);\n        }\n    }, {\n        key: \"_getDescriptor\",\n        value: function _getDescriptor() {\n            return this.descriptor;\n        }\n    }]);\n    return UserDescriptor;\n}();\n\nexports.UserDescriptor = UserDescriptor;"]},"metadata":{},"sourceType":"script"}