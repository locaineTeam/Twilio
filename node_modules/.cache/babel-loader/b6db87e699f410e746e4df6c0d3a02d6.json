{"ast":null,"code":"'use strict';\n\nvar CancelablePromise = require('./util/cancelablepromise');\n/**\r\n * Create a {@link CancelablePromise<Room>}.\r\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\r\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\r\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\r\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\r\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\r\n * @returns CancelablePromise<Room>\r\n */\n\n\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\n  var cancelableRoomSignalingPromise = void 0;\n  var cancellationError = new Error('Canceled');\n  return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\n    var localParticipant = void 0;\n    getLocalTracks(function getLocalTracksSucceeded(localTracks) {\n      if (isCanceled()) {\n        return CancelablePromise.reject(cancellationError);\n      }\n\n      localParticipant = createLocalParticipant(localTracks);\n      return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\n        if (isCanceled()) {\n          throw cancellationError;\n        }\n\n        cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\n        return cancelableRoomSignalingPromise;\n      });\n    }).then(function roomSignalingConnected(roomSignaling) {\n      if (isCanceled()) {\n        roomSignaling.disconnect();\n        throw cancellationError;\n      }\n\n      resolve(createRoom(localParticipant, roomSignaling));\n    }).catch(function onError(error) {\n      reject(error);\n    });\n  }, function onCancel() {\n    if (cancelableRoomSignalingPromise) {\n      cancelableRoomSignalingPromise.cancel();\n    }\n  });\n}\n\nmodule.exports = createCancelableRoomPromise;","map":{"version":3,"sources":["C:/Users/USER/Desktop/ARSW III/Twilio/node_modules/twilio-video/es5/cancelableroompromise.js"],"names":["CancelablePromise","require","createCancelableRoomPromise","getLocalTracks","createLocalParticipant","createRoomSignaling","createRoom","cancelableRoomSignalingPromise","cancellationError","Error","onCreate","resolve","reject","isCanceled","localParticipant","getLocalTracksSucceeded","localTracks","then","createRoomSignalingSucceeded","getCancelableRoomSignalingPromise","roomSignalingConnected","roomSignaling","disconnect","catch","onError","error","onCancel","cancel","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,0BAAD,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,2BAAT,CAAqCC,cAArC,EAAqDC,sBAArD,EAA6EC,mBAA7E,EAAkGC,UAAlG,EAA8G;AAC5G,MAAIC,8BAA8B,GAAG,KAAK,CAA1C;AACA,MAAIC,iBAAiB,GAAG,IAAIC,KAAJ,CAAU,UAAV,CAAxB;AAEA,SAAO,IAAIT,iBAAJ,CAAsB,SAASU,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+C;AAC1E,QAAIC,gBAAgB,GAAG,KAAK,CAA5B;AACAX,IAAAA,cAAc,CAAC,SAASY,uBAAT,CAAiCC,WAAjC,EAA8C;AAC3D,UAAIH,UAAU,EAAd,EAAkB;AAChB,eAAOb,iBAAiB,CAACY,MAAlB,CAAyBJ,iBAAzB,CAAP;AACD;;AACDM,MAAAA,gBAAgB,GAAGV,sBAAsB,CAACY,WAAD,CAAzC;AACA,aAAOX,mBAAmB,CAACS,gBAAD,CAAnB,CAAsCG,IAAtC,CAA2C,SAASC,4BAAT,CAAsCC,iCAAtC,EAAyE;AACzH,YAAIN,UAAU,EAAd,EAAkB;AAChB,gBAAML,iBAAN;AACD;;AACDD,QAAAA,8BAA8B,GAAGY,iCAAiC,EAAlE;AACA,eAAOZ,8BAAP;AACD,OANM,CAAP;AAOD,KAZa,CAAd,CAYGU,IAZH,CAYQ,SAASG,sBAAT,CAAgCC,aAAhC,EAA+C;AACrD,UAAIR,UAAU,EAAd,EAAkB;AAChBQ,QAAAA,aAAa,CAACC,UAAd;AACA,cAAMd,iBAAN;AACD;;AACDG,MAAAA,OAAO,CAACL,UAAU,CAACQ,gBAAD,EAAmBO,aAAnB,CAAX,CAAP;AACD,KAlBD,EAkBGE,KAlBH,CAkBS,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC/Bb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACD,KApBD;AAqBD,GAvBM,EAuBJ,SAASC,QAAT,GAAoB;AACrB,QAAInB,8BAAJ,EAAoC;AAClCA,MAAAA,8BAA8B,CAACoB,MAA/B;AACD;AACF,GA3BM,CAAP;AA4BD;;AAEDC,MAAM,CAACC,OAAP,GAAiB3B,2BAAjB","sourcesContent":["'use strict';\r\n\r\nvar CancelablePromise = require('./util/cancelablepromise');\r\n\r\n/**\r\n * Create a {@link CancelablePromise<Room>}.\r\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\r\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\r\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\r\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\r\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\r\n * @returns CancelablePromise<Room>\r\n */\r\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\r\n  var cancelableRoomSignalingPromise = void 0;\r\n  var cancellationError = new Error('Canceled');\r\n\r\n  return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\r\n    var localParticipant = void 0;\r\n    getLocalTracks(function getLocalTracksSucceeded(localTracks) {\r\n      if (isCanceled()) {\r\n        return CancelablePromise.reject(cancellationError);\r\n      }\r\n      localParticipant = createLocalParticipant(localTracks);\r\n      return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\r\n        if (isCanceled()) {\r\n          throw cancellationError;\r\n        }\r\n        cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\r\n        return cancelableRoomSignalingPromise;\r\n      });\r\n    }).then(function roomSignalingConnected(roomSignaling) {\r\n      if (isCanceled()) {\r\n        roomSignaling.disconnect();\r\n        throw cancellationError;\r\n      }\r\n      resolve(createRoom(localParticipant, roomSignaling));\r\n    }).catch(function onError(error) {\r\n      reject(error);\r\n    });\r\n  }, function onCancel() {\r\n    if (cancelableRoomSignalingPromise) {\r\n      cancelableRoomSignalingPromise.cancel();\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = createCancelableRoomPromise;"]},"metadata":{},"sourceType":"script"}