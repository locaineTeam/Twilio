{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = exports.Logger = void 0;\n\nconst logger = require(\"loglevel\");\n\nfunction prepareLine(prefix, args) {\n  return [`${new Date().toISOString()} Notifications ${prefix}:`].concat(Array.from(args));\n}\n\nclass Logger {\n  constructor() {\n    this.prefix = '';\n  }\n\n  static scope(prefix = '') {\n    // TBD this.prefix += ' ' + prefix;\n    return new Logger();\n  }\n\n  setLevel(level) {\n    logger.setLevel(level);\n  }\n\n  trace(...args) {\n    logger.debug.apply(null, prepareLine('T' + this.prefix, args));\n  }\n\n  debug(...args) {\n    logger.debug.apply(null, prepareLine('D' + this.prefix, args));\n  }\n\n  info(...args) {\n    logger.info.apply(null, prepareLine('I' + this.prefix, args));\n  }\n\n  warn(...args) {\n    logger.warn.apply(null, prepareLine('W' + this.prefix, args));\n  }\n\n  error(...args) {\n    logger.error.apply(null, prepareLine('E' + this.prefix, args));\n  }\n\n}\n\nexports.Logger = Logger;\nlet logInstance = Logger.scope();\nexports.log = logInstance;","map":{"version":3,"sources":["C:/Users/Usuario/Downloads/Twilio/node_modules/twilio-notifications/lib/logger.js"],"names":["Object","defineProperty","exports","value","log","Logger","logger","require","prepareLine","prefix","args","Date","toISOString","concat","Array","from","constructor","scope","setLevel","level","trace","debug","apply","info","warn","error","logInstance"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAApC;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;AAC/B,SAAO,CAAE,GAAE,IAAIC,IAAJ,GAAWC,WAAX,EAAyB,kBAAiBH,MAAO,GAArD,EAAyDI,MAAzD,CAAgEC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAhE,CAAP;AACH;;AACD,MAAML,MAAN,CAAa;AACTW,EAAAA,WAAW,GAAG;AACV,SAAKP,MAAL,GAAc,EAAd;AACH;;AACW,SAALQ,KAAK,CAACR,MAAM,GAAG,EAAV,EAAc;AACtB;AACA,WAAO,IAAIJ,MAAJ,EAAP;AACH;;AACDa,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZb,IAAAA,MAAM,CAACY,QAAP,CAAgBC,KAAhB;AACH;;AACDC,EAAAA,KAAK,CAAC,GAAGV,IAAJ,EAAU;AAAEJ,IAAAA,MAAM,CAACe,KAAP,CAAaC,KAAb,CAAmB,IAAnB,EAAyBd,WAAW,CAAC,MAAM,KAAKC,MAAZ,EAAoBC,IAApB,CAApC;AAAiE;;AAClFW,EAAAA,KAAK,CAAC,GAAGX,IAAJ,EAAU;AAAEJ,IAAAA,MAAM,CAACe,KAAP,CAAaC,KAAb,CAAmB,IAAnB,EAAyBd,WAAW,CAAC,MAAM,KAAKC,MAAZ,EAAoBC,IAApB,CAApC;AAAiE;;AAClFa,EAAAA,IAAI,CAAC,GAAGb,IAAJ,EAAU;AAAEJ,IAAAA,MAAM,CAACiB,IAAP,CAAYD,KAAZ,CAAkB,IAAlB,EAAwBd,WAAW,CAAC,MAAM,KAAKC,MAAZ,EAAoBC,IAApB,CAAnC;AAAgE;;AAChFc,EAAAA,IAAI,CAAC,GAAGd,IAAJ,EAAU;AAAEJ,IAAAA,MAAM,CAACkB,IAAP,CAAYF,KAAZ,CAAkB,IAAlB,EAAwBd,WAAW,CAAC,MAAM,KAAKC,MAAZ,EAAoBC,IAApB,CAAnC;AAAgE;;AAChFe,EAAAA,KAAK,CAAC,GAAGf,IAAJ,EAAU;AAAEJ,IAAAA,MAAM,CAACmB,KAAP,CAAaH,KAAb,CAAmB,IAAnB,EAAyBd,WAAW,CAAC,MAAM,KAAKC,MAAZ,EAAoBC,IAApB,CAApC;AAAiE;;AAfzE;;AAiBbR,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACA,IAAIqB,WAAW,GAAGrB,MAAM,CAACY,KAAP,EAAlB;AACAf,OAAO,CAACE,GAAR,GAAcsB,WAAd","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.Logger = void 0;\nconst logger = require(\"loglevel\");\nfunction prepareLine(prefix, args) {\n    return [`${new Date().toISOString()} Notifications ${prefix}:`].concat(Array.from(args));\n}\nclass Logger {\n    constructor() {\n        this.prefix = '';\n    }\n    static scope(prefix = '') {\n        // TBD this.prefix += ' ' + prefix;\n        return new Logger();\n    }\n    setLevel(level) {\n        logger.setLevel(level);\n    }\n    trace(...args) { logger.debug.apply(null, prepareLine('T' + this.prefix, args)); }\n    debug(...args) { logger.debug.apply(null, prepareLine('D' + this.prefix, args)); }\n    info(...args) { logger.info.apply(null, prepareLine('I' + this.prefix, args)); }\n    warn(...args) { logger.warn.apply(null, prepareLine('W' + this.prefix, args)); }\n    error(...args) { logger.error.apply(null, prepareLine('E' + this.prefix, args)); }\n}\nexports.Logger = Logger;\nlet logInstance = Logger.scope();\nexports.log = logInstance;\n"]},"metadata":{},"sourceType":"script"}