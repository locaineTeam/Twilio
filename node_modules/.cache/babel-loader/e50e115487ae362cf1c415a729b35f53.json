{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { IntlService } from './IntlService';\nimport { GlobalizationContext } from '../globalization/GlobalizationContext';\n/* eslint-disable max-len */\n\n/**\r\n * A React component which provides an internationalization service. Expects a locale string as a property of the component.\r\n */\n\nvar IntlProvider =\n/** @class */\nfunction (_super) {\n  __extends(IntlProvider, _super);\n\n  function IntlProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Returns an internationalization service. The method is suitable for overriding when you implement custom internationalization behavior.\r\n   */\n\n\n  IntlProvider.prototype.getIntlService = function () {\n    return new IntlService(this.props.locale);\n  };\n  /**\r\n   * @hidden\r\n   */\n\n\n  IntlProvider.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(GlobalizationContext.Consumer, null, function (glob) {\n      return React.createElement(GlobalizationContext.Provider, {\n        value: __assign({}, glob, {\n          intl: _this.getIntlService()\n        })\n      }, _this.props.children);\n    });\n  };\n  /**\r\n   * @hidden\r\n   */\n\n\n  IntlProvider.propTypes = {\n    locale: PropTypes.string\n  };\n  return IntlProvider;\n}(React.Component);\n\nexport default IntlProvider; // tslint:enable:max-line-length","map":{"version":3,"sources":["../../../src/Intl/IntlProvider.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AAEA,SAAS,WAAT,QAA4B,eAA5B;AAEA,SAAS,oBAAT,QAAqC,uCAArC;AAEA;;AACA;;AAEG;;AACH,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAA1C,WAAA,YAAA,GAAA;;AA6BC;AArBG;;AAEG;;;AACH,EAAA,YAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACI,WAAO,IAAI,WAAJ,CAAgB,KAAK,KAAL,CAAW,MAA3B,CAAP;AACH,GAFD;AAIA;;AAEG;;;AACH,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,WACE,KAAA,CAAA,aAAA,CAAC,oBAAoB,CAAC,QAAtB,EAA8B,IAA9B,EACG,UAAC,IAAD,EAAK;AAAK,aACT,KAAA,CAAA,aAAA,CAAC,oBAAoB,CAAC,QAAtB,EAA8B;AAAC,QAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAO,IAAP,EAAW;AAAE,UAAA,IAAI,EAAE,KAAI,CAAC,cAAL;AAAR,SAAX;AAAN,OAA9B,EACG,KAAI,CAAC,KAAL,CAFM,QACT,CADS;AAIN,KALP,CADF;AASH,GAVD;AAjBA;;AAEG;;;AACI,EAAA,YAAA,CAAA,SAAA,GAAY;AACf,IAAA,MAAM,EAAE,SAAS,CAAC;AADH,GAAZ;AAyBX,SAAA,YAAA;AAAC,CA7BD,CAA0C,KAAK,CAAC,SAAhD,CAAA;;eAAqB,Y,EA8BrB","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { IntlService } from './IntlService';\r\nimport { GlobalizationContext } from '../globalization/GlobalizationContext';\r\n/* eslint-disable max-len */\r\n/**\r\n * A React component which provides an internationalization service. Expects a locale string as a property of the component.\r\n */\r\nvar IntlProvider = /** @class */ (function (_super) {\r\n    __extends(IntlProvider, _super);\r\n    function IntlProvider() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns an internationalization service. The method is suitable for overriding when you implement custom internationalization behavior.\r\n     */\r\n    IntlProvider.prototype.getIntlService = function () {\r\n        return new IntlService(this.props.locale);\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    IntlProvider.prototype.render = function () {\r\n        var _this = this;\r\n        return (React.createElement(GlobalizationContext.Consumer, null, function (glob) { return (React.createElement(GlobalizationContext.Provider, { value: __assign({}, glob, { intl: _this.getIntlService() }) }, _this.props.children)); }));\r\n    };\r\n    /**\r\n     * @hidden\r\n     */\r\n    IntlProvider.propTypes = {\r\n        locale: PropTypes.string\r\n    };\r\n    return IntlProvider;\r\n}(React.Component));\r\nexport default IntlProvider;\r\n// tslint:enable:max-line-length\r\n//# sourceMappingURL=IntlProvider.js.map"]},"metadata":{},"sourceType":"module"}